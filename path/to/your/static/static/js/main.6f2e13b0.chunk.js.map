{"version":3,"sources":["components/pages/smartfridge.jpg","theme.js","components/pages/SignIn.js","firebaseconfig.js","components/dialogs/ContextErrorMessage.js","components/dialogs/LoadingProgress.js","components/dialogs/ProfileDropDown.js","components/layout/Header.js","components/layout/Footer.js","API/BusinessObject.js","API/UserBO.js","API/FoodEntry.js","API/RecipeBO.js","API/RecipeEntryBO.js","API/FridgeEntryBO.js","API/HouseholdBO.js","API/FridgeBO.js","API/Unit.js","API/SmartFridgeAPI.js","components/dialogs/HouseholdCheck.js","components/UserList.js","components/dialogs/FridgeEntryForm.js","components/FridgeItemList.js","components/pages/Home.js","components/pages/About.js","components/HouseholdList.js","components/dialogs/RecipeForm.js","components/layout/RecipeCard.js","components/RecipeList.js","components/dialogs/RecipeEntryForm.js","components/layout/RecipeEntryCard.js","components/RecipeEntryList.js","components/UnitList.js","App.js","index.js"],"names":["module","exports","theme","createTheme","palette","primary","contrastText","dark","colors","blue","main","light","secondary","teal","error","red","background","default","paper","text","grey","link","typography","fontSize","htmlFontSize","body1","h1","h2","breakpoints","values","xs","sm","md","lg","xl","SignIn","Component","constructor","arguments","handleSignInButtonClicked","this","props","onSignIn","render","React","createElement","style","backgroundImage","concat","backgroundSize","backgroundPosition","backgroundRepeat","width","height","position","top","left","zIndex","Box","sx","display","flexDirection","justifyContent","alignItems","maxWidth","padding","borderRadius","boxShadow","backgroundColor","Typography","margin","variant","align","fontWeight","Grid","container","Button","color","mt","onClick","href","target","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","_standardText","_classPrivateFieldLooseKey","ContextErrorMessage","Object","defineProperty","writable","value","contextErrorMsg","onReload","Alert","severity","_classPrivateFieldLooseBase","AlertTitle","message","marginTop","startIcon","AutorenewIcon","LoadingProgress","show","CircularProgress","_avatarButtonRef","ProfileDropDown","super","createRef","handleAvatarButtonClick","setState","open","state","handleClose","handleSignOutButtonClicked","auth","getAuth","signOut","then","navigate","user","IconButton","float","ref","Avatar","src","photoURL","Popover","anchorEl","current","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","ClickAwayListener","onClickAway","Paper","bgcolor","Divider","displayName","email","item","ProfileDropDownWithRouter","useNavigate","assign","Header","tabindex","handleTabChange","event","newValue","overflow","component","marginBottom","Tabs","indicatorColor","textColor","centered","onChange","Tooltip","title","Tab","icon","HomeIcon","label","RouterLink","to","MicrowaveIcon","KitchenIcon","LivingIcon","SettingsIcon","StraightenIcon","InfoIcon","BusinessObject","id","setId","aId","getId","toString","result","prop","UserBO","anick_name","afirstname","alastname","ahouseholdid","agoogleuserid","nick_name","first_name","last_name","household_id","google_user_id","setfirstname","getfirsname","firstname","setlastname","getlastname","lastname","setnickname","getnickname","setgoogleuserid","getgoogleuserid","googleuserid","sethouseholdid","gethouseholdid","householdid","users","Array","isArray","forEach","u","setPrototypeOf","prototype","push","FoodEntry","groceries_designation","quantity","unit","setDesignation","designation","getDesignation","setQuantity","getQuantity","setUnit","getUnit","foodEntries","map","f","foodEntry","RecipeBO","atitle","acreator","aNumberOfPersons","adescription","ahouseholdId","creator","numberOfPersons","description","householdId","setTitle","getTitle","setCreator","getCreator","setNumberOfPersons","getNumberOfPersons","setDescription","getDescription","setHouseholdId","getHouseholdId","recipes","r","recipe","RecipeEntryBO","recipe_id","setRecipeId","recipeid","getRecipeId","recipeEntries","recipeEntry","FridgeEntryBO","fridgeId","getFridgeId","setFridgeId","fridgeEntries","fridgeEntry","fridge_id","HouseholdBO","aname","afridgeid","name","setname","getname","setfridge_id","getfridgeid","households","h","FridgeBO","fridges","UnitBO","adesignation","ahoushold_id","_api","_fridgeserverbaseurl","_getFridgeEntriesURL","_addFridgeEntryURL","_getFridgeEntryURL","_updateFridgeEntryURL","_deleteFridgeEntryURL","_getFridgeEntriesbyFridgeID","_getRecipeEntriesURL","_addRecipeEntryURL","_getRecipeEntryURL","_getRecipeEntriesByRecipeIdURL","_updateRecipeEntryURL","_deleteRecipeEntryURL","_getFridgesURL","_addFridgeURL","_getFridgeIdByGoogleUserIdURL","_getUsersURL","_addUserURL","_getUserURL","_updateUserURL","_deleteUserURL","_searchUserURL","_searchUserbygoogleIDURL","_getRecipesURL","_addRecipeURL","_getRecipeURL","_updateRecipeURL","_deleteRecipeURL","_getHouseholdIdByGoogleUserIdURL","_getRecipesbyhouseholdIdURL","_getHouseholdsURL","_addHouseholdURL","_getHouseholdUsersbyIDURL","_getHouseholdbyIDURl","_updateHouseholdURL","_deleteHouseholdURL","_getUnitsbyIdURL","_deleteUnitURL","_getUnitsbyIdandDesignationURL","_addUnitURL","_cookfunctionurl","_fetchAdvanced","FridgeAPI","google_id","recipe_title","url","init","fetch","res","ok","Error","status","statusText","json","getUsers","responseJSON","userBOs","fromJSON","Promise","resolve","addUnit","unitBO","method","headers","body","JSON","stringify","catch","console","getUnitbyHouseholdId","deleteUnit","getHouseholds","householdBOs","getFridgeEntries","fridgentryBOs","getRecipeEntries","recipeentryBOs","getRecipes","recipeBOs","getFridges","fridgesBOs","getUserbyId","userBO","getUserbyGoogleUserId","getUserbyNickname","responsejSON","getUsersbyHouseholdID","householdBO","getHouseholdbyID","getRecipeByID","recipeBO","getRecipeEntriesByRecipeId","length","getFridgeEntriesbyFridgeId","entries","getRecipesbyhouseholdId","getFridgeIdByGoogleUserId","getHouseholdIdByGoogleUserId","addUser","credentials","responseUserBO","addFridgeEntry","fridgeEntryBO","addRecipeEntry","recipeEntryBO","addRecipe","number_of_persons","addHousehold","addFridge","fridgeBO","updateUser","deleteUser","UserID","updateFridgeEntry","updateRecipeEntry","deleteFridgeEntry","groceriesDesignation","updateRecipe","deleteRecipe","updateHousehold","deleteHousehold","deleteRecipeEntry","recipeId","cookRecipe","CheckforexistingHousehold","selectedHouseholdId","newHouseholdName","dialogOpen","loading","householdConfirmed","checkForHousehold","async","currentUser","getAPI","uid","onHouseholdConfirmed","fetchHouseholds","handleSelectHousehold","handleInputChange","trim","addedHousehold","userBOArray","renderDialogs","Dialog","reason","disableEscapeKeyDown","DialogTitle","DialogContent","gutterBottom","List","ListItem","button","key","border","ListItemIcon","ListItemText","TextField","type","fullWidth","DialogActions","componentDidMount","UserProfile","editDialogOpen","loadCurrentUser","e","fieldName","prevState","openEditDialog","closeEditDialog","minHeight","p","Card","raised","minWidth","CardContent","mb","gap","AccountCircleIcon","CardActions","EditIcon","aria-label","right","CloseIcon","DialogContentText","autoFocus","FridgeEntryForm","handleFetchGoogleUserId","log","response","loadingFridgeId","fridgeIdError","fetchHouseholdUnits","householdResponse","unitsResponse","units","addingInProgress","addingError","newFridgeEntry","fridgeentry","baseState","updatingInProgress","updatingError","updatedFridgeEntry","textFieldValueChange","designationValidationFailed","designationEdited","quantityValidationFailed","quantityEdited","unitValidationFailed","unitEdited","noValidate","autoComplete","required","helperText","FormControl","InputLabel","Select","labelId","MenuItem","disabled","FridgeEntriesComponent","fetchFridgeEntries","fridgeEntryBOs","handleAddButtonClick","showAddForm","editEntry","handleFormClose","newEntry","handleEditButtonClick","entry","handleDeleteButtonClick","spacing","textAlign","AddIcon","size","DeleteIcon","Home","About","CardMedia","image","alt","paragraph","Household","householdName","loadHouseholdUsers","household","updateHouseholdName","deletecurrentHousehold","mr","charAt","primaryTypographyProps","HouseholdWrapper","RecipeForm","_ref","recipeentry","useState","titleValidationFailed","setTitleValidationFailed","titleEdited","setTitleEdited","numberOfPersonsValidationFailed","setNumberOfPersonsValidationFailed","numberOfPersonsEdited","setNumberOfPersonsEdited","descriptionValidationFailed","setDescriptionValidationFailed","descriptionEdited","setDescriptionEdited","setAddingInProgress","setUpdatingInProgress","setAddingError","setUpdatingError","loadingHouseholdId","setLoadingHouseholdId","householdIdError","setHouseholdIdError","useEffect","newRecipe","updatedRecipe","trimmedValue","isEdited","isNaN","komponent_title","header","RecipeCard","onEdit","onDelete","onViewEntries","onCook","OutdoorGrillIcon","conversionRates","liters","milliliters","kilograms","grams","pieces","cups","pinch","RecipeList","setRecipes","setFridgeEntries","setShowAddForm","setLoading","setError","editRecipe","setEditRecipe","fetchRecipes","handleViewEntriesButtonClick","handleCookButtonClick","missingIngredients","recipeEntryBOs","matchingFridgeEntry","find","recipeQuantityInFridgeUnits","fromUnit","toUnit","alert","RecipeEntryForm","setUnits","handleError","newRecipeEntry","updatedRecipeEntry","RecipeEntryCard","isEntryAvailableInFridge","RecipeEntryList","useParams","setRecipeEntries","setEditEntry","fetchRecipeAndFridgeEntries","some","convertedQuantity","convertQuantity","parseInt","realUnits","UnitList","newUnit","setNewUnit","snackbarOpen","setSnackbarOpen","fetchUnits","fetchedUnits","handleSnackbarClose","Container","LinearProgress","secondaryAction","edge","unitId","handleDeleteUnit","includes","toLowerCase","Snackbar","autoHideDuration","App","handleSignIn","authLoading","signInWithPopup","provider","currentHouseholdId","appError","authError","bind","firebaseInitialized","app","initializeApp","GoogleAuthProvider","unsubscribeFromAuth","onAuthStateChanged","_user$displayName","_user$displayName2","_user$displayName3","newUser","split","componentWillUnmount","ThemeProvider","Theme","CssBaseline","Router","flex","Routes","Route","path","element","Navigate","replace","Secured","children","location","useLocation","from","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.6f2e13b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/smartfridge.b39668d2.jpg\";","import { createTheme } from '@mui/material/styles';\r\nimport { colors } from '@mui/material';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      contrastText: '#FFFFFF',\r\n      dark: colors.blue[900],\r\n      main: colors.blue[500],\r\n      light: colors.blue[100]\r\n    },\r\n    secondary: {\r\n      contrastText: '#FFFFFF',\r\n      dark: colors.teal[900],\r\n      main: colors.teal[700],\r\n      light: colors.teal[500]\r\n    },\r\n    error: {\r\n      contrastText: '#FFFFFF',\r\n      dark: colors.red[900],\r\n      main: colors.red[600],\r\n      light: colors.red[400]\r\n    },\r\n    background: {\r\n      default: '#F4F6F8',\r\n      paper: '#FFFFFF'\r\n    },\r\n    text: {\r\n      primary: colors.grey[900],\r\n      secondary: colors.grey[700],\r\n      link: colors.blue[600]\r\n    },\r\n    \r\n  },\r\n  typography: {\r\n    fontSize: 14,\r\n    htmlFontSize: 16,\r\n    body1: {\r\n      fontSize: '1rem', \r\n    },\r\n    h1: {\r\n      fontSize: '2.125rem', \r\n      '@media (max-width:600px)': {\r\n        fontSize: '1.5rem', \r\n      },\r\n    },\r\n    h2: {\r\n      fontSize: '1.5rem', \r\n      '@media (max-width:600px)': {\r\n        fontSize: '1.25rem', \r\n      },\r\n    },\r\n    \r\n  },\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 960,\r\n      lg: 1280,\r\n      xl: 1920,\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Grid, Typography, Box } from '@mui/material';\r\nimport backgroundImage from './smartfridge.jpg';\r\n\r\nclass SignIn extends Component {\r\n\thandleSignInButtonClicked = () => {\r\n\t\tthis.props.onSignIn();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{\r\n\t\t\t\tbackgroundImage: `url(${backgroundImage})`,\r\n\t\t\t\tbackgroundSize: 'cover',\r\n\t\t\t\tbackgroundPosition: 'center',\r\n\t\t\t\tbackgroundRepeat: 'no-repeat',\r\n\t\t\t\twidth: '100vw',\r\n\t\t\t\theight: '100vh',\r\n\t\t\t\tposition: 'fixed',\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tzIndex: -1 \r\n\t\t\t}}>\r\n\t\t\t\t<Box sx={{\r\n\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: '100%',\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Box sx={{\r\n\t\t\t\t\t\twidth: 'auto',\r\n\t\t\t\t\t\tmaxWidth: 360,\r\n\t\t\t\t\t\tpadding: 3,\r\n\t\t\t\t\t\tborderRadius: 2,\r\n\t\t\t\t\t\tboxShadow: 3,\r\n\t\t\t\t\t\tbackgroundColor: 'background.paper'\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Typography sx={{ margin: 2 }} variant='h5' align='center' fontWeight=\"bold\">\r\n\t\t\t\t\t\t\tWelcome to SmartFridge\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography sx={{ margin: 2 }} align='center'>\r\n\t\t\t\t\t\t\tIt appears that you are not signed in.\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography sx={{ margin: 2 }} align='center'>\r\n\t\t\t\t\t\t\tSign in to your SmartFridge\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Grid container justifyContent='center'>\r\n\t\t\t\t\t\t\t<Button variant='contained' color='primary' sx={{ mt: 2 }} onClick={this.handleSignInButtonClicked}>\r\n\t\t\t\t\t\t\t\tSign in with Google\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container justifyContent='center' sx={{ mt: 1 }}>\r\n\t\t\t\t\t\t\t<Typography variant=\"body2\">\r\n\t\t\t\t\t\t\t\tDon't have an account? <a href=\"https://www.google.com\" target='_blank'>Sign up!</a>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nSignIn.propTypes = {\r\n\tonSignIn: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default SignIn;\r\n","const firebaseConfig = {\r\n    apiKey: \"AIzaSyADK9EcfaMt57s0tETlJ6ss-u-D-sHLFbw\",\r\n    authDomain: \"sopra-gruppe-07.firebaseapp.com\",\r\n    projectId: \"sopra-gruppe-07\",\r\n    storageBucket: \"sopra-gruppe-07.appspot.com\",\r\n    messagingSenderId: \"57134648348\",\r\n    appId: \"1:57134648348:web:00719678c07c1dda5763d9\",\r\n  };\r\n\r\n\r\n  export default firebaseConfig;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Alert, AlertTitle } from '@mui/material';\r\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\r\n\r\n/**\r\n * Shows an in-line error message in a given component context,\r\n * if the error object is not null\r\n * \r\n * @See See Material-UIs [Alert](https://mui.com/material-ui/react-alert/)\r\n * \r\n * @author [Robin Krauß](https://github.com/Roggo17)\r\n */\r\nclass ContextErrorMessage extends Component {\r\n  #standardText = 'Definitiv Halis schuld';\r\n\r\n  /** Renders the ContextErrorMessage if error object is not null  */\r\n  render() {\r\n    const { error, contextErrorMsg, onReload } = this.props;\r\n\r\n    return (\r\n      (error !== null) ?\r\n        <Alert severity='error'>\r\n          <div>\r\n            {this.#standardText}\r\n          </div>\r\n          <AlertTitle>\r\n            {contextErrorMsg}\r\n          </AlertTitle>\r\n          <div >\r\n            Error message (for debugging only) is:\r\n          </div>\r\n          <div>\r\n            {error.message}\r\n          </div>\r\n          {\r\n            onReload ?\r\n              <div >\r\n                <Button sx={{ marginTop: 2 }} variant='contained' color='primary' startIcon={<AutorenewIcon />} onClick={onReload}>\r\n                  Reload\r\n                </Button>\r\n              </div>\r\n              : null\r\n          }\r\n        </Alert>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\n/** PropTypes */\r\nContextErrorMessage.propTypes = {\r\n  /** \r\n   * The error object, which drives the error message \r\n   * If not null, the error message is shown \r\n   */\r\n  error: PropTypes.object,\r\n  /**  A contextual error message to be shown */\r\n  contextErrorMsg: PropTypes.string,\r\n  /** \r\n   * A reload handler for the onReload event, which occurs if the reload button is clicked. \r\n   * If given a reload button is shown \r\n   */\r\n  onReload: PropTypes.func\r\n}\r\n\r\nexport default ContextErrorMessage;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CircularProgress, LinearProgress } from '@mui/material';\r\n\r\n// LoadingProgress Component\r\n// Shows a loading spinner while waiting for an API request\r\nclass LoadingProgress extends Component {\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n\r\n    return (\r\n      show ?\r\n        <div >\r\n          <CircularProgress sx={{width: '100%', marginTop: 2}} color='secondary' />\r\n        </div>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\nLoadingProgress.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default LoadingProgress;\r\n","import React, { Component, createRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Popover, IconButton, Avatar, ClickAwayListener, Typography, Paper, Button, Grid, Divider, Box } from '@mui/material';\r\nimport { getAuth, signOut } from \"firebase/auth\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nclass ProfileDropDown extends Component {\r\n\r\n  \r\n  #avatarButtonRef = createRef();\r\n  // Konstruktor mit Initialisierung des States\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  // Initialisierung des states\r\n    this.state = {\r\n      open: false,\r\n    }\r\n  }\r\n\r\n  // Funktion zum Öffnen des Popovers\r\n  handleAvatarButtonClick = () => {\r\n    this.setState({\r\n      open: !this.state.open\r\n    });\r\n  }\r\n\r\n // Funktion zum Schließen des Popovers\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false\r\n    });\r\n  }\r\n\r\n  // Funktion zum Abmelden des Benutzers\r\n  handleSignOutButtonClicked = () => {\r\n    const auth = getAuth();\r\n    signOut(auth).then(() => {\r\n      this.props.navigate('/');\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // Extract the user attribute from the props\r\n    const { user } = this.props;\r\n    // Extract the open attribute from the state\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      user ?\r\n        <Box>\r\n          <IconButton sx={{ float: 'right' }} ref={this.#avatarButtonRef} onClick={this.handleAvatarButtonClick}>\r\n            <Avatar src={user.photoURL} />\r\n          </IconButton>\r\n\r\n          <Popover \r\n            open={open} \r\n            anchorEl={this.#avatarButtonRef.current} \r\n            onClose={this.handleClose}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            PaperProps={{\r\n              sx: { \r\n                mt: 1, \r\n                boxShadow: 3,\r\n                borderRadius: 2,\r\n                width: 260\r\n              }\r\n            }}\r\n          >\r\n            <ClickAwayListener onClickAway={this.handleClose}>\r\n              <Paper sx={{ padding: 2, bgcolor: 'background.default' }}>\r\n                <Typography align='center' variant='h6' sx={{ fontWeight: 'bold', color: 'primary.main' }}>\r\n                  Hello\r\n                </Typography>\r\n                <Divider sx={{ margin: 1 }} />\r\n                <Typography align='center' variant='body1' sx={{ fontWeight: 'medium' }}>{user.displayName}</Typography>\r\n                <Typography align='center' variant='body2' sx={{ color: 'text.secondary' }}>{user.email}</Typography>\r\n                <Divider sx={{ margin: 1 }} />\r\n                <Grid container justifyContent='center'>\r\n                  <Grid item>\r\n                    <Button \r\n                      color='primary' \r\n                      variant=\"contained\"\r\n                      onClick={this.handleSignOutButtonClicked} \r\n                      sx={{ mt: 1 }}\r\n                    >\r\n                      Logout\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </ClickAwayListener>\r\n          </Popover>\r\n        </Box>\r\n        : null\r\n    )\r\n  }\r\n}\r\n\r\n/** PropTypes */\r\nProfileDropDown.propTypes = {\r\n  user : PropTypes.object,\r\n}\r\n\r\n\r\nconst ProfileDropDownWithRouter = (props) => {\r\n  const navigate = useNavigate();\r\n  return <ProfileDropDown {...props} navigate={navigate} />;\r\n};\r\n\r\nexport default ProfileDropDownWithRouter;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Paper, Typography, Tabs, Tab, Tooltip } from '@mui/material';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport ProfileDropDownWithRouter from '../dialogs/ProfileDropDown';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport MicrowaveIcon from '@mui/icons-material/Microwave';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport KitchenIcon from '@mui/icons-material/Kitchen';\r\nimport LivingIcon from '@mui/icons-material/Living';\r\nimport StraightenIcon from '@mui/icons-material/Straighten';\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    tabindex: 0,\r\n  };\r\n\r\n  handleTabChange = (event, newValue) => {\r\n    this.setState({ tabindex: newValue });\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    const { tabindex } = this.state;\r\n\r\n    return (\r\n      <Paper variant='outlined' style={{\r\n        borderRadius: '10px', \r\n        overflow: 'hidden', \r\n        boxShadow: '0 4px 10px rgba(0, 0, 0, 0.2)'\r\n      }}>\r\n        <ProfileDropDownWithRouter user={user} />\r\n        <Typography variant='h3' component='h1' align='center' style={{\r\n          marginTop: '20px', \r\n          marginBottom: '10px', \r\n          fontWeight: 'bold'\r\n        }}>\r\n          HdMSmartFridge\r\n        </Typography>\r\n        {user && (\r\n          <Tabs \r\n            indicatorColor='primary' \r\n            textColor='primary' \r\n            centered \r\n            value={tabindex} \r\n            onChange={this.handleTabChange}\r\n            style={{\r\n              marginBottom: '20px'\r\n            }}\r\n          >\r\n            <Tooltip title=\"Here is our Homepage\">\r\n              <Tab icon={<HomeIcon />} label='Home' component={RouterLink} to='/home'/>\r\n            </Tooltip>\r\n            <Tooltip title=\"Here you can find your saved Recipes\">\r\n              <Tab icon={<MicrowaveIcon />} label='Recipes' component={RouterLink} to='/recipe' />\r\n            </Tooltip>\r\n            <Tooltip title=\"Here you can find your Groceries\">\r\n              <Tab icon={<KitchenIcon />} label='Fridge' component={RouterLink} to='/fridge' />\r\n            </Tooltip>\r\n            <Tooltip title=\"Here you can see whos in your Household\">\r\n              <Tab icon={<LivingIcon />} label='Household' component={RouterLink} to='/household' />\r\n            </Tooltip>\r\n            <Tooltip title=\"Here you can edit your User Profile\">\r\n              <Tab icon={<SettingsIcon />} label='User' component={RouterLink} to='/user'/>\r\n            </Tooltip>\r\n            <Tooltip title=\"Here you can see the available the Units\">\r\n              <Tab icon={<StraightenIcon />} label='Units' component={RouterLink} to='/unit' />\r\n            </Tooltip>\r\n            <Tooltip title=\"About our App\">\r\n              <Tab icon={<InfoIcon />} label='About' component={RouterLink} to='/about' />\r\n            </Tooltip>\r\n          </Tabs>\r\n        )}\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\n//how is the user object passed to the Header component?\r\n//The user object is passed to the Header component as a prop from the parent component. The parent component is responsible for fetching the user data and passing it down to the Header component as a prop. This allows the Header component to access the user data and display it in the UI.\r\n//what is the parent component of the Header component?\r\n//The parent component of the Header component is the App component. The App component is the root component of the application and is responsible for managing the state of the user data. The App component fetches the user data from the backend and passes it down to the Header component as a prop.\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport { Paper, Typography, Link } from '@mui/material';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <Paper variant=\"outlined\" style={{\r\n        borderRadius: '10px',\r\n        marginTop: 'auto',\r\n        padding: '10px 20px',\r\n        backgroundColor: '#f3f3f3',\r\n        boxShadow: '0 -2px 10px rgba(0, 0, 0, 0.1)'\r\n      }}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" align=\"center\">\r\n          © 2024 HdMSmartFridge, Inc. All rights reserved.\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" style={{ marginTop: '5px' }}>\r\n          <Link component={RouterLink} to={process.env.PUBLIC_URL + '/privacy'}>Privacy Policy</Link> | <Link component={RouterLink} to={process.env.PUBLIC_URL + '/terms'}>Terms of Service</Link>\r\n        </Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","export default class BusinessObject {\r\n\r\n  /**\r\n   * Der Konstruktor.\r\n   */\r\n  constructor() {\r\n      this.id = 0;\r\n  }\r\n\r\n  /**\r\n   * Setzt die ID dieses BusinessObjects.\r\n   * @param {Number} aId - die neue ID dieses BusinessObjects.\r\n   */\r\n  setId(aId) {\r\n      this.id = aId;\r\n  }\r\n\r\n  /**\r\n   * Gibt die ID dieses BusinessObjects zurück.\r\n   * @return {Number} die ID dieses BusinessObjects.\r\n   */\r\n  getId() {\r\n      return this.id;\r\n  }\r\n\r\n  /**\r\n   * Konvertiert JavaScript-Objekte in Strings, was z.B. bei Logfiles hilfreich sein kann.\r\n   * @return {String} die String-Repräsentation dieses Objekts.\r\n   */\r\n  toString() {\r\n      let result = '';\r\n      for (let prop in this) {\r\n          result += prop + ': ' + this[prop] + ' ';\r\n      }\r\n      return result;\r\n  }\r\n}\r\n","import BusinessObject from './BusinessObject.js'\r\n\r\n/**UserBO fürs Frontend */\r\n\r\nexport default class UserBO extends BusinessObject {\r\n\r\n    /** Konstruktion eines neuen Users \r\n   * @param {String} anickname - der Nickname von diesem CustomerBO.\r\n   * @param {String} afirstname - der Vorname von diesem  CustomerBO.\r\n   * @param {String} alastname - der Nachname von diesem  CustomerBO.\r\n   * @param {String} ahouseholdid - die Haushalts ID von diesem CustomerBO.\r\n   * @param {String} agoogleuserid - die Google User ID von diesem CustomerBO.\r\n   */\r\n    constructor(anick_name, afirstname, alastname,  ahouseholdid, agoogleuserid,) {\r\n        super();\r\n        this.nick_name = anick_name;\r\n        this.first_name = afirstname;\r\n        this.last_name = alastname;\r\n        this.household_id = ahouseholdid;\r\n        this.google_user_id = agoogleuserid;\r\n    }\r\n\r\n\r\n    /**\r\n   * Setzen eines neuen Vornamen.\r\n   * \r\n   * @param {String} afirstname - neuer Vorname von diesem CustomerBO.\r\n   */\r\n    setfirstname(afirstname) {\r\n        this.first_name = afirstname;\r\n    }\r\n\r\n    getfirsname() {\r\n        return this.firstname;\r\n    }\r\n\r\n\r\n    /**\r\n   * Setzen eines neuen Nachnamen.\r\n   * \r\n   * @param {String} alasttname - neuer Nachname von diesem CustomerBO.\r\n   */\r\n    setlastname(alastname) {\r\n        this.last_name = alastname;\r\n    }\r\n\r\n    getlastname(){\r\n        return this.lastname;\r\n    }\r\n\r\n\r\n    /**\r\n   * Setzen eines neuen Nicknamen.\r\n   * \r\n   * @param {String} anicktname - neuer Nickname von diesem CustomerBO.\r\n   */\r\n    setnickname(anick_name) {\r\n        this.nick_name = anick_name;\r\n    }\r\n\r\n    getnickname() {\r\n        return this.nick_name;\r\n    }\r\n\r\n\r\n    /**\r\n   * Setzen einer neuen Google User ID.\r\n   * \r\n   * @param {String} agoogleuserid - neue Google User ID von diesem CustomerBO.\r\n   */\r\n    setgoogleuserid(agoogleuserid) {\r\n        this.google_user_id = agoogleuserid;\r\n    }\r\n\r\n    getgoogleuserid() {\r\n        return this.googleuserid;\r\n    }\r\n\r\n\r\n    /**\r\n   * Setzen einer neuen Haushalt ID.\r\n   * \r\n   * @param {String} ahouseholdid - neue Haushalt ID von diesem CustomerBO.\r\n   */\r\n    sethouseholdid(ahouseholdid) {\r\n        this.ahouseholdid = ahouseholdid\r\n    }\r\n    \r\n    gethouseholdid() {\r\n        return this.householdid\r\n    }\r\n\r\n\r\n    \r\n    static fromJSON(users) {\r\n        let result = [];\r\n        /**\r\n         * Wir erstellen aus jedem Objekt von User eine Json.\r\n         *  \r\n         */\r\n    \r\n        if (Array.isArray(users)) {\r\n          users.forEach((u) => {\r\n            Object.setPrototypeOf(u, UserBO.prototype);\r\n            result.push(u);\r\n          })\r\n        } else {\r\n          // Sollte es ein Singelton Objekt sein\r\n          let u = users;\r\n          Object.setPrototypeOf(u, UserBO.prototype);\r\n          result.push(u);\r\n        }\r\n    \r\n        return result;\r\n      }\r\n}","import BusinessObject from \"./BusinessObject.js\";\r\n\r\nexport default class FoodEntry extends BusinessObject {\r\n    constructor(groceries_designation, quantity, unit) {\r\n        super();\r\n        this.groceries_designation = groceries_designation;\r\n        this.quantity = quantity;\r\n        this.unit = unit;\r\n    }\r\n\r\n    setDesignation(designation) {\r\n        this.groceries_designation = designation;\r\n    }\r\n\r\n    getDesignation() {\r\n        return this.groceries_designation;\r\n    }\r\n\r\n    setQuantity(quantity) {\r\n        this.quantity = quantity;\r\n    }\r\n\r\n    getQuantity() {\r\n        return this.quantity;\r\n    }\r\n\r\n    setUnit(unit) {\r\n        this.unit = unit;\r\n    }\r\n\r\n    getUnit() {\r\n        return this.unit;\r\n    }\r\n\r\n    static fromJSON(foodEntries) {\r\n        return foodEntries.map(f => {\r\n            let foodEntry = new FoodEntry(f.groceries_designation, f.quantity, f.unit);\r\n            foodEntry.setId(f.id);  // ID Direkt setzen\r\n            return foodEntry;\r\n        });\r\n    }\r\n}\r\n\r\n\r\n","import BusinessObject from \"./BusinessObject.js\";\r\n\r\nexport default class RecipeBO extends BusinessObject {\r\n    constructor(atitle, acreator, aNumberOfPersons, adescription, ahouseholdId) {\r\n        super();\r\n        this.title = atitle;\r\n        this.creator = acreator;\r\n        this.numberOfPersons = aNumberOfPersons;\r\n        this.description = adescription;\r\n        this.householdId = ahouseholdId;\r\n    }\r\n\r\n    setTitle(atitle) {\r\n        this.title = atitle;\r\n    }\r\n\r\n    getTitle() {\r\n        return this.title;\r\n    }\r\n\r\n    setCreator(acreator) {\r\n        this.creator = acreator;\r\n    }\r\n\r\n    getCreator() {\r\n        return this.creator;\r\n    }\r\n\r\n    setNumberOfPersons(aNumberOfPersons) {\r\n        this.numberOfPersons = aNumberOfPersons;\r\n    }\r\n\r\n    getNumberOfPersons() {\r\n        return this.numberOfPersons;\r\n    }\r\n\r\n    setDescription(adescription) {\r\n        this.description = adescription;\r\n    }\r\n\r\n    getDescription() {\r\n        return this.description;\r\n    }\r\n\r\n    setHouseholdId(ahouseholdId) {\r\n        this.householdId = ahouseholdId;\r\n    }\r\n\r\n    getHouseholdId() {\r\n        return this.householdId;\r\n    }\r\n\r\n    static fromJSON(recipes) {\r\n        let result = [];\r\n        if (Array.isArray(recipes)) {\r\n            recipes.forEach((r) => {\r\n                let recipe = new RecipeBO(\r\n                    r.title,\r\n                    r.creator,\r\n                    r.numberOfPersons,  // Verwende den richtigen Schlüssel\r\n                    r.description,\r\n                    r.householdId\r\n                );\r\n                recipe.setId(r.id);\r\n                result.push(recipe);\r\n            });\r\n        } else {\r\n            let r = recipes;\r\n            let recipe = new RecipeBO(\r\n                r.title,\r\n                r.creator,\r\n                r.numberOfPersons,  // Verwende den richtigen Schlüssel\r\n                r.description,\r\n                r.householdId\r\n            );\r\n            recipe.setId(r.id);\r\n            result.push(recipe);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n","import FoodEntry from './FoodEntry.js';\r\n\r\nexport default class RecipeEntryBO extends FoodEntry {\r\n   /** Konstruktion der RezeptID.\r\n   * @param {String} recipeid - Fügt einem Rezept eine ID hinzu.\r\n   */\r\n    constructor(groceries_designation, quantity, unit, recipe_id) {\r\n        super(groceries_designation, quantity, unit);\r\n        this.recipe_id = recipe_id;\r\n    }\r\n\r\n    /**\r\n   * Setzen einer ID für das Rezept.\r\n   * @param {String} recipeid - ID des jeweiligen Rezeptes, das mit dem Eintrag in Verbindung steht.\r\n   */\r\n    setRecipeId(recipeid) {\r\n        this.recipe_id = recipeid;\r\n    }\r\n\r\n    getRecipeId() {\r\n        return this.recipe_id;\r\n    }\r\n\r\n    static fromJSON(recipeEntries) {\r\n        if (!Array.isArray(recipeEntries)) {\r\n          recipeEntries = [recipeEntries];\r\n        }\r\n        \r\n        return recipeEntries.map(r => {\r\n          let recipeEntry = new RecipeEntryBO(r.groceries_designation, r.quantity, r.unit, r.recipe_id);\r\n          recipeEntry.setId(r.id); \r\n          return recipeEntry;\r\n        });\r\n      }\r\n    }\r\n","import FoodEntry from \"./FoodEntry\";\r\n// FoodEntryBO als Klasse für die FridgeEntryBO und RecipeEntryBO\r\nexport default class FridgeEntryBO extends FoodEntry {\r\n    constructor(groceries_designation, quantity, unit, fridgeId) {\r\n        super(groceries_designation, quantity, unit);\r\n        this.fridgeId = fridgeId;\r\n    }\r\n\r\n    getFridgeId() {\r\n        return this.fridgeId;\r\n    }\r\n\r\n    setFridgeId(fridgeId) {\r\n        this.fridgeId = fridgeId;\r\n    }\r\n\r\n    static fromJSON(fridgeEntries) {\r\n        if (!Array.isArray(fridgeEntries)) {\r\n            fridgeEntries = [fridgeEntries];\r\n        }\r\n        return fridgeEntries.map(f => {\r\n            let fridgeEntry = new FridgeEntryBO(f.groceries_designation, f.quantity, f.unit, f.fridge_id);\r\n            fridgeEntry.setId(f.id); \r\n            return fridgeEntry;\r\n        });\r\n    }\r\n}\r\n","import BusinessObject from \"./BusinessObject.js\";\r\n\r\nexport default class HouseholdBO extends BusinessObject {\r\n\r\n\r\n    /** Konstruktion eines neuen Haushalts \r\n   * @param {String} aname - der Name des Haushalts.\r\n   */ \r\n    constructor(aname, afridgeid) {\r\n        super();\r\n        this.name = aname\r\n        this.fridge_id = afridgeid\r\n    }\r\n\r\n\r\n    /**\r\n   * Setzen einer neuen Namen für den Haushalt.\r\n   * \r\n   * @param {String} aname -  neuen Namen des Haushaltes.\r\n   */\r\n    setname(aname) {\r\n        this.name = aname\r\n    }\r\n\r\n    getname () {\r\n        return this.name\r\n    }\r\n\r\n    setfridge_id(afridgeid) {\r\n      this.afridgeid = afridgeid\r\n    }\r\n\r\n    getfridgeid() {\r\n      return this.afridgeid\r\n    }\r\n\r\n    static fromJSON(households) {\r\n      let result = [];\r\n      /**\r\n       * Wir erstellen aus jedem Objekt von User eine Json.\r\n       *  \r\n       */\r\n  \r\n      if (Array.isArray(households)) {\r\n        households.forEach((h) => {\r\n          Object.setPrototypeOf(h, HouseholdBO.prototype);\r\n          result.push(h);\r\n        })\r\n      } else {\r\n        // Sollte es ein Singelton Objekt sein\r\n        let h = households;\r\n        Object.setPrototypeOf(h, HouseholdBO.prototype);\r\n        result.push(h);\r\n      }\r\n  \r\n      return result;\r\n    }\r\n}","import BusinessObject from \"./BusinessObject.js\"\r\n\r\nexport default class FridgeBO extends BusinessObject {\r\n\r\n\r\n    \r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static fromJSON(fridges) {\r\n        let result = [];\r\n    \r\n        if (Array.isArray(fridges)) {\r\n          fridges.forEach((f) => {\r\n            Object.setPrototypeOf(f, FridgeBO.prototype);\r\n            result.push(f);\r\n          })\r\n        } else {\r\n          // Es handelt sich offenbar um ein singuläres Objekt\r\n          let f = fridges;\r\n          Object.setPrototypeOf(f, FridgeBO.prototype);\r\n          result.push(f);\r\n        }\r\n    \r\n        return result;\r\n      }\r\n\r\n}","import BusinessObject from \"./BusinessObject\";\r\n\r\nexport default class UnitBO extends BusinessObject {\r\n\r\n  constructor(adesignation, ahoushold_id) {\r\n    super();\r\n    this.designation = adesignation;\r\n    this.household_id = ahoushold_id;\r\n  }\r\n\r\n  getDesignation() {\r\n    return this.designation;\r\n  }\r\n\r\n  setDesignation(adesignation) {\r\n    this.designation = adesignation;\r\n  }\r\n\r\n  getHouseholdId() {\r\n    return this.household_id;\r\n  }\r\n\r\n  setHouseholdId(ahoushold_id) {\r\n    this.household_id = ahoushold_id;\r\n  }\r\n\r\n  static fromJSON(unit) {\r\n    let result = [];\r\n\r\n    if (Array.isArray(unit)) {\r\n      unit.forEach((u) => {\r\n        Object.setPrototypeOf(u, UnitBO.prototype);\r\n        result.push(u);\r\n      })\r\n    } else {\r\n      let u = unit;\r\n      Object.setPrototypeOf(u, UnitBO.prototype);\r\n      result.push(u);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}","import UserBO from \"./UserBO\";\r\nimport FoodEntry from \"./FoodEntry\";\r\nimport RecipeBO from \"./RecipeBO\";\r\nimport RecipeEntryBO from \"./RecipeEntryBO\";\r\nimport FridgeEntryBO from \"./FridgeEntryBO\";\r\nimport HouseholdBO from \"./HouseholdBO\";\r\nimport FridgeBO from \"./FridgeBO\";\r\nimport UnitBO from \"./Unit\";\r\nimport { json } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\nclass FridgeAPI {\r\n\r\n    //Singleton pattern\r\n    static #api = null\r\n\r\n    //python backend --> main.py, müssen wir noch reinschreiben, erzeugt sicherheit\r\n\r\n\r\n\r\n    /**\r\n     * Da sich der Präfix häufig mal ändern kann, setzen wir hier einen Fest\r\n     * und setzen diese für jede Methode unten ein. \r\n     * \r\n     * Ebenfalls müssen wir nicht jedes mal bei jeder FetchAdvanded-Methode die URl Übergeben, sondern\r\n     * z.B. getFridgeEntriesURL\r\n     */\r\n    #fridgeserverbaseurl = 'http://127.0.0.1:5000/fridge';\r\n\r\n    //Hier werden die URL's für die verschiedenen Methoden definiert\r\n    // FridgeEntry related\r\n    #getFridgeEntriesURL = () => `${this.#fridgeserverbaseurl}/FridgeEntries`;\r\n    #addFridgeEntryURL = () => `${this.#fridgeserverbaseurl}/FridgeEntries`;\r\n    #getFridgeEntryURL = (groceries_designation) => `${this.#fridgeserverbaseurl}/FridgeEntry/${groceries_designation}`;\r\n    #updateFridgeEntryURL = (groceries_designation) => `${this.#fridgeserverbaseurl}/FridgeEntry/${groceries_designation}`;\r\n    #deleteFridgeEntryURL = (groceries_designation) => `${this.#fridgeserverbaseurl}/FridgeEntry/${groceries_designation}`;\r\n    #getFridgeEntriesbyFridgeID = (fridge_id) => `${this.#fridgeserverbaseurl}/FridgeEntries/${fridge_id}`;\r\n\r\n\r\n\r\n    // RecipeEntry related\r\n    #getRecipeEntriesURL = () => `${this.#fridgeserverbaseurl}/RecipeEntries`;\r\n    #addRecipeEntryURL = () => `${this.#fridgeserverbaseurl}/RecipeEntries`;\r\n    #getRecipeEntryURL = (groceries_designation) => `${this.#fridgeserverbaseurl}/RecipeEntry/${groceries_designation}`;\r\n    #getRecipeEntriesByRecipeIdURL = (recipe_id) => `${this.#fridgeserverbaseurl}/RecipeEntries/${recipe_id}`;\r\n    #updateRecipeEntryURL = (groceries_designation, recipe_id) => `${this.#fridgeserverbaseurl}/RecipeEntry/${groceries_designation}/${recipe_id}`;\r\n    #deleteRecipeEntryURL = (groceries_designation, recipe_id) => `${this.#fridgeserverbaseurl}/RecipeEntry/${groceries_designation}/${recipe_id}`;\r\n    \r\n    \r\n    \r\n    \r\n\r\n    // Fridge related\r\n    #getFridgesURL = () => `${this.#fridgeserverbaseurl}/Fridge`;\r\n    #addFridgeURL = () => `${this.#fridgeserverbaseurl}/Fridge`;\r\n    #getFridgeIdByGoogleUserIdURL = (google_user_id) => `${this.#fridgeserverbaseurl}/fridge-id-by-google-id/${google_user_id}`;\r\n\r\n\r\n    //user related\r\n    #getUsersURL = () => `${this.#fridgeserverbaseurl}/users`;\r\n    #addUserURL = () => `${this.#fridgeserverbaseurl}/users`;\r\n    #getUserURL = (id) => `${this.#fridgeserverbaseurl}/users/${id}`;\r\n    #updateUserURL = (id) => `${this.#fridgeserverbaseurl}/users/${id}`;\r\n    #deleteUserURL = (id) =>  `${this.#fridgeserverbaseurl}/users/${id}`;\r\n    #searchUserURL = (nick_name) => `${this.#fridgeserverbaseurl}/users/${nick_name}`;\r\n    #searchUserbygoogleIDURL = (google_id) => `${this.#fridgeserverbaseurl}/user-by-google-id/${google_id}`;\r\n\r\n\r\n    // Recipe related\r\n    #getRecipesURL = () => `${this.#fridgeserverbaseurl}/RecipeList`;\r\n    #addRecipeURL = () => `${this.#fridgeserverbaseurl}/RecipeList`;\r\n    #getRecipeURL = (id) => `${this.#fridgeserverbaseurl}/Recipe/${id}`;\r\n    #updateRecipeURL = (id) => `${this.#fridgeserverbaseurl}/Recipe/$/${id}`;\r\n    #deleteRecipeURL = (id) => `${this.#fridgeserverbaseurl}/Recipe/${id}`;\r\n    #getHouseholdIdByGoogleUserIdURL = (google_user_id) => `${this.#fridgeserverbaseurl}/household-id-by-google-id/${google_user_id}`;\r\n    #getRecipesbyhouseholdIdURL = (household_id) => `${this.#fridgeserverbaseurl}/RecipeList/${household_id}`;\r\n\r\n\r\n    // Household related\r\n    #getHouseholdsURL = () => `${this.#fridgeserverbaseurl}/Household`;\r\n    #addHouseholdURL = () => `${this.#fridgeserverbaseurl}/Household`;\r\n    #getHouseholdUsersbyIDURL = (id) => `${this.#fridgeserverbaseurl}/Household/${id}`;\r\n    #getHouseholdbyIDURl = (id) => `${this.#fridgeserverbaseurl}/HouseholdbyID/${id}`\r\n    #updateHouseholdURL = (id) => `${this.#fridgeserverbaseurl}/Household/${id}`;\r\n    #deleteHouseholdURL = (id) => `${this.#fridgeserverbaseurl}/Household/${id}`;\r\n\r\n    //Unit related\r\n    #getUnitsbyIdURL = (id) => `${this.#fridgeserverbaseurl}/Unit/${id}`;\r\n    #deleteUnitURL = (id) => `${this.#fridgeserverbaseurl}/Unit/${id}`;\r\n    #getUnitsbyIdandDesignationURL = (id, designation) => `${this.#fridgeserverbaseurl}/Unit}/${designation}/${id}`;\r\n    #addUnitURL = () => `${this.#fridgeserverbaseurl}/Unit`;\r\n\r\n    //Hier wird die URL für die Cook Funktion definiert\r\n    #cookfunctionurl = (recipe_title) => `${this.#fridgeserverbaseurl}/COOK/${recipe_title}`;\r\n    // getAPI Methode, um Singleton Pattern zu gewährleisten\r\n    static getAPI() {\r\n        if (this.#api == null) {\r\n            this.#api = new FridgeAPI();\r\n        }\r\n        return this.#api\r\n    }\r\n    //fetchAdvanced Methode, um die Fetch Methode zu erweitern und Fehler abzufangen\r\n    #fetchAdvanced = (url, init) => fetch(url, init)\r\n        .then(res => {\r\n            if(!res.ok) {\r\n                throw Error(`${res.status} ${res.statusText}`);\r\n            }\r\n            return res.json();\r\n        }\r\n        )\r\n    //Hier werden die Methoden definiert, die wir in der App verwenden\r\n\r\n    //Diese Methode holt alle User aus der Datenbank\r\n    getUsers() {\r\n        return this.#fetchAdvanced(this.#getUsersURL()).then((responseJSON) => {\r\n            let userBOs = UserBO.fromJSON(responseJSON);\r\n            return new Promise(function(resolve) {\r\n                resolve(userBOs);\r\n            })\r\n        })    \r\n    }\r\n\r\n    //Diese Methode fügt eine Unit hinzu\r\n    addUnit(unitBO) { \r\n        return this.#fetchAdvanced(this.#addUnitURL(), { \r\n            method: 'POST', \r\n            headers: { \r\n                'Accept': 'application/json, text/plain', \r\n                'Content-Type': 'application/json', \r\n            }, \r\n            body: JSON.stringify(unitBO) \r\n        }).then(responseJSON => { \r\n            return responseJSON; \r\n        }).catch(error => { \r\n            console.error('Failed to add unit:', error); \r\n            throw new Error('Error adding unit'); \r\n        });\r\n    }\r\n\r\n    //Methode, bei der man eine Unit anhand der ID aus der Datenbank holt\r\n    getUnitbyHouseholdId(id) {\r\n        return this.#fetchAdvanced(this.#getUnitsbyIdURL(id)).then((responseJSON) => {\r\n            // Check if the response is correctly parsed\r\n            let unitBO = UnitBO.fromJSON(responseJSON);\r\n            return new Promise(function(resolve) {\r\n                resolve(unitBO);\r\n            });\r\n        }).catch(error => {\r\n            console.error('Error fetching unit by household ID:', error);\r\n        });\r\n    }\r\n    \r\n    //Methode um eine Unit zu löschen\r\n    deleteUnit(id) { \r\n        return this.#fetchAdvanced(this.#deleteUnitURL(id), { \r\n            method: 'DELETE' \r\n        }).then(() => ({ message: \"Unit deleted successfully\", id }));\r\n    }\r\n\r\n    //Methde um alle Haushalte aus der Datenbank zu holen\r\n    getHouseholds() {\r\n        return this.#fetchAdvanced(this.#getHouseholdsURL()).then((responseJSON) => {\r\n            let householdBOs = HouseholdBO.fromJSON(responseJSON);\r\n            return new Promise(function (resolve) {\r\n                resolve(householdBOs);\r\n            })\r\n        })\r\n    }\r\n\r\n    //Methode um alle FridgeEntries aus der Datenbank zu holen\r\n    getFridgeEntries() {\r\n        return this.#fetchAdvanced(this.#getFridgeEntriesURL()).then((responseJSON) => {\r\n            let fridgentryBOs = FridgeEntryBO.fromJSON(responseJSON);\r\n            return new Promise(function(resolve) {\r\n                resolve(fridgentryBOs);\r\n            })\r\n        })\r\n    }\r\n    //Methode um alle RecipeEntries aus der Datenbank zu holen\r\n    getRecipeEntries() {\r\n        return this.#fetchAdvanced(this.#getRecipeEntriesURL()).then((responseJSON) => {\r\n            let recipeentryBOs = RecipeEntryBO.fromJSON(responseJSON);\r\n            return new Promise(function (resolve) {\r\n                resolve(recipeentryBOs);\r\n            })\r\n        })\r\n    }\r\n\r\n    //Methode um alle Rezepte aus der Datenbank zu holen\r\n    getRecipes() {\r\n        return this.#fetchAdvanced(this.#getRecipesURL()).then((responseJSON) => {\r\n            let recipeBOs = RecipeBO.fromJSON(responseJSON);\r\n            return new Promise(function(resolve) {\r\n                resolve(recipeBOs);\r\n            });\r\n        });\r\n    }\r\n\r\n    // Methode um alle Fridge aus der Datenbank zu holen\r\n    getFridges() {\r\n        return this.#fetchAdvanced(this.#fridgeserverbaseurl()).then((responseJSON) => {\r\n            let fridgesBOs = FridgeBO.fromJSON(responseJSON);\r\n            return new Promise(function (resolve) {\r\n                resolve(fridgesBOs);\r\n            })\r\n        })\r\n    }\r\n\r\n    // Methode, nach der man einen User anhand der ID aus der Datenbank holt\r\n    getUserbyId(id) {\r\n        return this.#fetchAdvanced(this.#getUserURL(id)).then((responseJSON) => {\r\n            let userBO = UserBO.fromJSON(responseJSON);\r\n            return new Promise(function(resolve) {\r\n                resolve(userBO)\r\n            })\r\n        }\r\n    )\r\n    }\r\n\r\n    //Methode, nach der man einen User anhand der Google ID aus der Datenbank holt\r\n    getUserbyGoogleUserId(google_user_id) {\r\n        return this.#fetchAdvanced(this.#searchUserbygoogleIDURL(google_user_id)).then((responseJSON) => {\r\n            let userBO = UserBO.fromJSON(responseJSON);\r\n            return new Promise(function(resolve) {\r\n                resolve(userBO)\r\n            })\r\n        })\r\n    }\r\n\r\n    //User nach Nickname suchen\r\n    getUserbyNickname(nick_name) {\r\n        return this.#fetchAdvanced(this.#searchUserURL(nick_name)).then((responsejSON) => {\r\n            let userBO = UserBO.fromJSON(responsejSON);\r\n            return new Promise(function(resolve) {\r\n                resolve(userBO)\r\n            })\r\n        })\r\n    }\r\n    //fetched alle user eines bestimmten haushaltes\r\n    getUsersbyHouseholdID(id) {\r\n        return this.#fetchAdvanced(this.#getHouseholdUsersbyIDURL(id)).then((responseJSON) => {\r\n            let householdBO = HouseholdBO.fromJSON(responseJSON);\r\n            return new Promise(function(resolve) {\r\n                resolve(householdBO);\r\n            });\r\n        });\r\n    }\r\n\r\n    //Methode, um einen Haushalt anhand der ID aus der Datenbank zu holen\r\n    getHouseholdbyID(id) {\r\n        return this.#fetchAdvanced(this.#getHouseholdbyIDURl(id)).then((responseJSON) =>{\r\n            let householdBO = HouseholdBO.fromJSON(responseJSON);\r\n            return new Promise(function(resolve) {\r\n                resolve(householdBO)\r\n            })\r\n        })\r\n    }\r\n\r\n    //Methode, um ein Rezept anhand der ID aus der Datenbank zu holen\r\n    getRecipeByID(id) {\r\n        return this.#fetchAdvanced(this.#getRecipeURL(id)).then((responseJSON) => {\r\n            let recipeBO = RecipeBO.fromJSON(responseJSON);\r\n            return new Promise(function(resolve) {\r\n                resolve(recipeBO);\r\n            });\r\n        });\r\n    }\r\n    //Methode, um ein alle RecipeEntries eines Rezeptes anhand der ID aus der Datenbank zu holen\r\n    getRecipeEntriesByRecipeId(recipe_id) {\r\n        return this.#fetchAdvanced(this.#getRecipeEntriesByRecipeIdURL(recipe_id))\r\n            .then(responseJSON => {\r\n                if (responseJSON.length === 0) {\r\n                    return []; // Leere Liste zurückgeben, wenn keine Einträge gefunden werden\r\n                }\r\n                return RecipeEntryBO.fromJSON(responseJSON);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error fetching recipe entries:\", error);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    //Methode, um alle FrigeEntries eines bestimmten Fridge aus der Datenbank zu holen\r\n    getFridgeEntriesbyFridgeId(fridge_id) {\r\n        return this.#fetchAdvanced(this.#getFridgeEntriesbyFridgeID(fridge_id)).then((responseJSON) => {\r\n            let entries = FridgeBO.fromJSON(responseJSON);\r\n            return new Promise(function(resolve) {\r\n                resolve(entries);\r\n            });\r\n        });\r\n    }\r\n\r\n    //Methode, um alle Rezepte eines bestimmten Haushaltes aus der Datenbank zu holen\r\n    getRecipesbyhouseholdId(household_id) {\r\n        return this.#fetchAdvanced(this.#getRecipesbyhouseholdIdURL(household_id)).then((responseJSON) => {\r\n            let recipes = RecipeBO.fromJSON(responseJSON);  \r\n            return new Promise(function(resolve) {\r\n                resolve(recipes);\r\n            });\r\n        });\r\n    }\r\n\r\n    //Methode, anhand der man die Fride_Id ahand der Google User ID aus der Datenbank holt\r\n    getFridgeIdByGoogleUserId(google_user_id) {\r\n        return this.#fetchAdvanced(this.#getFridgeIdByGoogleUserIdURL(google_user_id)).then(responseJSON => {\r\n            return responseJSON;\r\n        }).catch(error => {\r\n            console.error('Failed to fetch fridge ID:', error);\r\n            throw new Error('Error fetching fridge ID by Google User ID');\r\n        });\r\n    }\r\n\r\n    //Methode, mit anhand welcher ein Haushalt per Google User ID aus der Datenbank geholt wird\r\n    getHouseholdIdByGoogleUserId(google_user_id) {\r\n        return this.#fetchAdvanced(this.#getHouseholdIdByGoogleUserIdURL(google_user_id)).then(responseJSON => {\r\n            return responseJSON;\r\n        }).catch(error => {\r\n            console.error('Failed to fetch household ID:', error);\r\n            throw new Error('Error fetching household ID by Google User ID');\r\n        });\r\n    }\r\n\r\n\r\n\r\n    //Methode um einen User hinzuzufügen\r\n    addUser(userBO) {\r\n        return this.#fetchAdvanced(this.#addUserURL(), {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-type':'application/json',\r\n            },\r\n            body: JSON.stringify(userBO)\r\n        }).then((responseJSON) => {\r\n            let responseUserBO = UserBO.fromJSON(responseJSON)[0];\r\n\r\n            return new Promise(function (resolve) {\r\n                resolve(responseUserBO);\r\n            })\r\n        })\r\n    }\r\n\r\n    //Methode um einen FridgeEntry hinzuzuzufügen\r\n    addFridgeEntry(fridgeEntryBO) {\r\n        return this.#fetchAdvanced(this.#fridgeserverbaseurl + '/FridgeEntries', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                fridge_id: fridgeEntryBO.getFridgeId(),\r\n                groceries_designation: fridgeEntryBO.getDesignation(),\r\n                quantity: fridgeEntryBO.getQuantity(),\r\n                unit: fridgeEntryBO.getUnit()\r\n            })\r\n        }).then(responseJSON => {\r\n            return FridgeEntryBO.fromJSON([responseJSON])[0];\r\n        }).catch(error => {\r\n            console.error('Failed to add fridge entry:', error);\r\n            throw new Error(`Error adding fridge entry: ${error.message}`);\r\n        });\r\n    }\r\n    //hinzufügen eines RecipeEntries\r\n    addRecipeEntry(recipeEntryBO) {\r\n        return this.#fetchAdvanced(this.#addRecipeEntryURL(), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                recipe_id: recipeEntryBO.getRecipeId(),\r\n                groceries_designation: recipeEntryBO.getDesignation(),\r\n                quantity: recipeEntryBO.getQuantity(),\r\n                unit: recipeEntryBO.getUnit()\r\n            })\r\n        }).then(responseJSON => {\r\n            return RecipeEntryBO.fromJSON([responseJSON])[0];\r\n        }).catch(error => {\r\n            console.error('Failed to add fridge entry:', error);\r\n            throw new Error(`Error adding fridge entry: ${error.message}`);\r\n        });\r\n    }\r\n\r\n\r\n    // ein Rezept hinzufügen\r\n    addRecipe(recipeBO) {\r\n        return this.#fetchAdvanced(this.#fridgeserverbaseurl + '/RecipeList', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                id: recipeBO.getId(),\r\n                title: recipeBO.getTitle(),  \r\n                creator: recipeBO.getCreator(),\r\n                number_of_persons: recipeBO.getNumberOfPersons(),\r\n                description: recipeBO.getDescription(),  \r\n                household_id: recipeBO.getHouseholdId()\r\n            })\r\n        }).then(responseJSON => {\r\n            return RecipeBO.fromJSON(responseJSON)[0];\r\n        });\r\n    }\r\n    \r\n\r\n\r\n    //Methode um einen Haushalt hinzuzufügen\r\n    addHousehold(householdBO) {\r\n        return this.#fetchAdvanced(this.#addHouseholdURL(), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(householdBO)\r\n        }).then(responseJSON => {\r\n            return HouseholdBO.fromJSON(responseJSON)[0];\r\n        }).catch(error => {\r\n        console.error('Failed to add a recipe:', error);\r\n        throw new Error('Error adding recipe: ${error.message}'); \r\n    })\r\n    }\r\n\r\n    //Methode um eine Fridge hinzuzufügen\r\n    addFridge(fridgeBO) {\r\n        return this.#fetchAdvanced(this.#addFridgeURL(), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(fridgeBO)\r\n        }).then(responseJSON => {\r\n            return FridgeBO.fromJSON(responseJSON)[0];\r\n        });\r\n    }\r\n    //User updaten\r\n    updateUser(userBO) {\r\n        return this.#fetchAdvanced(this.#updateUserURL(userBO.id), {\r\n            method:'PUT',\r\n            headers: {\r\n                'Accept':'application/json, text/plain',\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(userBO)\r\n        }).then((responseJSON) => {\r\n            let responseUserBO = UserBO.fromJSON(responseJSON)[0];\r\n        return new Promise(function(resolve) {\r\n            resolve(responseUserBO);\r\n        })\r\n    })\r\n    }\r\n    //User löschen\r\n    deleteUser(UserID) {\r\n        return this.#fetchAdvanced(this.#deleteUserURL(UserID), {\r\n            method:'DELETE'\r\n\r\n        }).then((responseJSON) => {\r\n\r\n            let responseUserBO = UserBO.fromJSON(responseJSON)[0];\r\n\r\n            return new Promise(function(resolve){\r\n                resolve(responseUserBO);\r\n            })\r\n        })\r\n    }\r\n    //FridgeEntry updaten\r\n    updateFridgeEntry(fridgeEntryBO) {\r\n        return this.#fetchAdvanced(this.#updateFridgeEntryURL(fridgeEntryBO.designation), {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(fridgeEntryBO)\r\n        }).then(responseJSON => FridgeEntryBO.fromJSON(responseJSON)[0]);\r\n    }\r\n\r\n      //RecipeEntry updaten\r\n      updateRecipeEntry(recipeEntryBO) {\r\n        return this.#fetchAdvanced(this.#updateRecipeEntryURL(recipeEntryBO.getDesignation(), recipeEntryBO.getRecipeId()), {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(recipeEntryBO)\r\n        }).then(responseJSON => RecipeEntryBO.fromJSON(responseJSON)[0]); \r\n        \r\n    }\r\n   \r\n    \r\n\r\n    //FridgeEntry löschen\r\n    deleteFridgeEntry(groceriesDesignation) {\r\n        return this.#fetchAdvanced(this.#deleteFridgeEntryURL(groceriesDesignation), {\r\n            method: 'DELETE'\r\n        }).then(() => ({ message: \"Fridge entry deleted successfully\", groceriesDesignation }));\r\n    }\r\n    //Rezept updaten\r\n    updateRecipe(recipeBO) {\r\n        return this.#fetchAdvanced(this.#updateRecipeURL(recipeBO.getId()), {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(recipeBO)\r\n        }).then(responseJSON => RecipeBO.fromJSON(responseJSON)[0]);\r\n    }\r\n\r\n\r\n      \r\n\r\n        \r\n\r\n    //Rezept löschen\r\n    deleteRecipe(id) {\r\n        return this.#fetchAdvanced(this.#deleteRecipeURL(id), {\r\n            method: 'DELETE'\r\n        }).then(() => ({ message: \"Recipe deleted successfully\", id }));\r\n    }\r\n    \r\n    //Haushalt updaten\r\n    updateHousehold(householdBO) {\r\n        return this.#fetchAdvanced(this.#updateHouseholdURL(householdBO.id), {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(householdBO)\r\n        }).then(responseJSON => HouseholdBO.fromJSON(responseJSON)[0]);\r\n    }\r\n    //Haushalt löschen\r\n    deleteHousehold(id) {\r\n        return this.#fetchAdvanced(this.#deleteHouseholdURL(id), {\r\n            method: 'DELETE'\r\n        }).then(() => ({ message: \"Household deleted successfully\", id }));\r\n    }\r\n\r\n    //RezeptEntry löschen\r\n    deleteRecipeEntry(groceriesDesignation, recipeId) {\r\n        return this.#fetchAdvanced(this.#deleteRecipeEntryURL(groceriesDesignation, recipeId), {\r\n            method: 'DELETE'\r\n        }).then(() => ({ message: \"Recipe entry deleted successfully\", groceriesDesignation }))\r\n        .catch(error => {\r\n            console.error('Failed to delete recipe entry:', groceriesDesignation, error);\r\n            throw new Error('Error deleting recipe entry');\r\n        });\r\n    }\r\n    //Kochen eines Rezepts, subtrahiert die Zutaten aus der Fridge\r\n    cookRecipe(recipe_title) {\r\n        return this.#fetchAdvanced(this.#cookfunctionurl(recipe_title), {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-type': 'application/json',\r\n            },\r\n        }).then((responseJSON => {\r\n            return responseJSON;\r\n        }))\r\n    }\r\n    \r\n    \r\n\r\n}\r\n\r\n\r\nexport default FridgeAPI;\r\n\r\n\r\n\r\n//API TESTEN\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, List, ListItem, ListItemText, CircularProgress, TextField, ListItemIcon, Typography } from '@mui/material';\r\nimport { getAuth } from 'firebase/auth';\r\nimport FridgeAPI from '../../API/SmartFridgeAPI';\r\nimport HouseholdBO from '../../API/HouseholdBO';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\n\r\n//Komponente die nach Anmeldung überprüft, ob der Google_user bereits ind er db existiert, \r\n//falls nicht wird ein neues User Objekt angelegt und die Aufforderung angezeigt, einen Haushalt auszuwählen  @author: Tom Schönfeld\r\nclass CheckforexistingHousehold extends Component {\r\n\r\n    //state initialisieren\r\n    state = {\r\n        households: [],\r\n        selectedHouseholdId: null,\r\n        newHouseholdName: '',\r\n        dialogOpen: false,\r\n        error: null,\r\n        loading: true,\r\n        householdConfirmed: false \r\n    }\r\n    //lifecycle methode\r\n    componentDidMount() {\r\n        this.checkForHousehold();\r\n    }\r\n\r\n    //auth holen und db nach user überprüfen, danach haushalt zuweisung prüfen, falls nicht alle haushalte fetchen und zur auwahl anzeigen\r\n    checkForHousehold = async () => {\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        if (!currentUser) {\r\n            this.setState({ error: \"No user logged in\", loading: false });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const userBO = await FridgeAPI.getAPI().getUserbyGoogleUserId(currentUser.uid);\r\n            if (userBO && userBO.length > 0 && userBO[0].household_id) {\r\n                if (!this.state.householdConfirmed) { //haushalt bereits bestätigt?\r\n                    this.props.onHouseholdConfirmed(userBO[0].household_id);\r\n                    this.setState({ loading: false, householdConfirmed: true, dialogOpen: false }); \r\n                }\r\n            } else {\r\n                await this.fetchHouseholds();\r\n                this.setState({ dialogOpen: true, loading: false }); \r\n            }\r\n        } catch (error) {\r\n            this.setState({ error: error.message, loading: false }); \r\n        }\r\n    }\r\n    // methode zum fetchen der haushalte\r\n    fetchHouseholds = async () => {\r\n        try {\r\n            const households = await FridgeAPI.getAPI().getHouseholds();\r\n            this.setState({\r\n                households: households,\r\n                loading: false\r\n            });\r\n        } catch (error) {\r\n            this.setState({ error: error.message, loading: false });\r\n        }\r\n    }\r\n    //was soll passieren, wenn ein Haushalt aus der liste ausgewählt wird?\r\n    handleSelectHousehold = (id) => {\r\n        if (!this.state.householdConfirmed) { \r\n            this.setState({\r\n                selectedHouseholdId: id,\r\n                dialogOpen: false,\r\n                householdConfirmed: true \r\n            });\r\n            this.props.onHouseholdConfirmed(id);\r\n        }\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        this.setState({ newHouseholdName: event.target.value });\r\n    }\r\n    // Option statt auszuwählen einen neuen Haushalt zu erstellen\r\n    addHousehold = async () => {\r\n        const { newHouseholdName } = this.state;\r\n        if (!newHouseholdName.trim()) {\r\n            this.setState({ error: \"Household name cannot be empty.\" });\r\n            return;\r\n        }\r\n        this.setState({ loading: true });\r\n        try {\r\n            let householdBO = new HouseholdBO({ name: newHouseholdName, id: 0, fridge_id: null });\r\n            const addedHousehold = await FridgeAPI.getAPI().addHousehold(householdBO);\r\n            const auth = getAuth();\r\n            const currentUser = auth.currentUser;\r\n            if (currentUser) {\r\n                let userBOArray = await FridgeAPI.getAPI().getUserbyGoogleUserId(currentUser.uid);\r\n                if (userBOArray && userBOArray.length > 0) {\r\n                    let userBO = userBOArray[0];\r\n                    userBO.household_id = addedHousehold.id;\r\n                    await FridgeAPI.getAPI().updateUser(userBO);\r\n                    if (!this.state.householdConfirmed) {\r\n                        this.setState({ loading: false, dialogOpen: false, newHouseholdName: '', householdConfirmed: true });\r\n                        this.props.onHouseholdConfirmed(addedHousehold.id);\r\n                    }\r\n                } else {\r\n                    throw new Error(\"Failed to fetch user data for updating.\");\r\n                }\r\n            } else {\r\n                throw new Error(\"No authenticated user found.\");\r\n            }\r\n        } catch (error) {\r\n            this.setState({ error: error.message, loading: false });\r\n        }\r\n    }\r\n\r\n    renderDialogs = () => {\r\n        const { dialogOpen, households, newHouseholdName, error } = this.state;\r\n\r\n        return (\r\n            <Dialog \r\n                open={dialogOpen} \r\n                onClose={(event, reason) => {\r\n                    if (reason !== 'backdropClick' && reason !== 'escapeKeyDown') {\r\n                        this.setState({ dialogOpen: false });\r\n                    }\r\n                }}\r\n                disableEscapeKeyDown\r\n            >\r\n                <DialogTitle>{households.length ? \"Select or Create a Household\" : \"Create a Household\"}</DialogTitle>\r\n                <DialogContent>\r\n                    {error && <Typography color=\"error\" variant=\"body2\" gutterBottom>{error}</Typography>}\r\n                    <List>\r\n                        {households.map(h => (\r\n                            <ListItem \r\n                                button \r\n                                key={h.id} \r\n                                onClick={() => this.handleSelectHousehold(h.id)}\r\n                                sx={{ \r\n                                    margin: '10px 0', \r\n                                    border: '1px solid #ccc', \r\n                                    borderRadius: '8px', \r\n                                    padding: '10px 20px', \r\n                                    '&:hover': { \r\n                                        backgroundColor: '#f0f0f0' \r\n                                    } \r\n                                }}\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <HomeIcon color=\"primary\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={h.name} />\r\n                            </ListItem>\r\n                        ))}\r\n                        <ListItem>\r\n                            <TextField\r\n                                label=\"New Household Name\"\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                                value={newHouseholdName}\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.addHousehold} color=\"primary\">Add New Household</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { loading, error } = this.state;\r\n        if (loading) return <CircularProgress />;\r\n        if (error && !this.state.dialogOpen) return <p>Error: {error}</p>; // Display global error only if dialog is not open\r\n        return this.renderDialogs();\r\n    }\r\n}\r\n\r\nexport default CheckforexistingHousehold;\r\n","import React, { Component } from 'react';\r\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Card, CardContent, Typography, Box, CardActions, IconButton, CircularProgress } from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport FridgeAPI from '../API/SmartFridgeAPI.js';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nclass UserProfile extends Component {\r\n    state = {\r\n        user: null,\r\n        loading: true,\r\n        error: null,\r\n        editDialogOpen: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadCurrentUser();\r\n    }\r\n\r\n    loadCurrentUser = async () => {\r\n        this.setState({ loading: true });\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        if (!currentUser) {\r\n            this.setState({ error: \"No user logged in\", loading: false });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const userBO = await FridgeAPI.getAPI().getUserbyGoogleUserId(currentUser.uid);\r\n            if (!userBO || userBO.length === 0) {\r\n                throw new Error(\"User not found.\");\r\n            }\r\n            this.setState({ user: userBO[0], loading: false });\r\n        } catch (error) {\r\n            console.error('Failed to fetch user:', error);\r\n            this.setState({ error: error.message, loading: false });\r\n        }\r\n    };\r\n\r\n    handleInputChange = (e) => {\r\n        const fieldName = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevState => ({\r\n            user: { ...prevState.user, [fieldName]: value }\r\n        }));\r\n    };\r\n\r\n    openEditDialog = () => {\r\n        this.setState({ editDialogOpen: true });\r\n    };\r\n\r\n    closeEditDialog = () => {\r\n        this.setState({ editDialogOpen: false });\r\n    };\r\n\r\n    updateUser = async () => {\r\n        const { user } = this.state;\r\n        if (!user.nick_name || !user.first_name || !user.last_name) {\r\n            this.setState({ error: 'Please fill out all fields.' });\r\n            return;\r\n        }\r\n        this.setState({ loading: true });\r\n        try {\r\n            await FridgeAPI.getAPI().updateUser(user);\r\n            this.closeEditDialog();\r\n            this.setState({ loading: false });\r\n        } catch (error) {\r\n            this.setState({ error: error.message, loading: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { user, loading, error, editDialogOpen } = this.state;\r\n\r\n        if (loading) return <CircularProgress />;\r\n        if (error) return <ContextErrorMessage error={error} />;\r\n        if (!user) return null;\r\n\r\n        return (\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '100vh', backgroundColor: 'lightblue', p: 2 }}>\r\n                <Card raised sx={{ minWidth: 300, bgcolor: 'background.paper', p: 2 }}>\r\n                    <CardContent>\r\n                        <Typography variant=\"h5\" component=\"div\" sx={{ fontWeight: 'medium', mb: 2, display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                            <AccountCircleIcon color=\"primary\" /> Your Profile\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            Nickname: {user.nick_name}<br />\r\n                            First Name: {user.first_name}<br />\r\n                            Last Name: {user.last_name}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button startIcon={<EditIcon />} onClick={this.openEditDialog} variant=\"contained\" color=\"primary\">\r\n                            Edit Profile\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n\r\n                <Dialog open={editDialogOpen} onClose={this.closeEditDialog}>\r\n                    <DialogTitle>\r\n                        Edit Your Profile\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            onClick={this.closeEditDialog}\r\n                            sx={{\r\n                                position: 'absolute',\r\n                                right: 8,\r\n                                top: 8,\r\n                                color: (theme) => theme.palette.grey[500],\r\n                            }}\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>Update your profile details.</DialogContentText>\r\n                        <TextField autoFocus margin=\"dense\" name=\"nick_name\" label=\"Nickname\" type=\"text\" fullWidth variant=\"outlined\" value={user.nick_name} onChange={this.handleInputChange} />\r\n                        <TextField margin=\"dense\" name=\"first_name\" label=\"First Name\" type=\"text\" fullWidth variant=\"outlined\" value={user.first_name} onChange={this.handleInputChange} />\r\n                        <TextField margin=\"dense\" name=\"last_name\" label=\"Last Name\" type=\"text\" fullWidth variant=\"outlined\" value={user.last_name} onChange={this.handleInputChange} />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.closeEditDialog}>Cancel</Button>\r\n                        <Button onClick={this.updateUser} color=\"primary\" variant=\"contained\">Update</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserProfile;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, MenuItem, Select, FormControl, InputLabel } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport FridgeAPI from '../../API/SmartFridgeAPI';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\nimport { getAuth } from 'firebase/auth';\r\nimport FridgeEntryBO from '../../API/FridgeEntryBO';\r\n\r\nclass FridgeEntryForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // Init the state\r\n        let designation = '', quantity = '', unit = '', fridge_id = '';\r\n        if (props.fridgeentry) {\r\n            designation = props.fridgeentry.getDesignation();\r\n            quantity = props.fridgeentry.getQuantity();\r\n            unit = props.fridgeentry.getUnit();\r\n            fridge_id = props.fridgeentry.getFridgeId();\r\n        }\r\n\r\n        this.state = {\r\n            designation: designation,\r\n            designationValidationFailed: false,\r\n            designationEdited: false,\r\n            quantity: quantity,\r\n            quantityValidationFailed: false,\r\n            quantityEdited: false,\r\n            unit: unit,\r\n            unitValidationFailed: false,\r\n            unitEdited: false,\r\n            units: [],\r\n            fridge_id: fridge_id,\r\n            addingInProgress: false,\r\n            updatingInProgress: false,\r\n            addingError: null,\r\n            updatingError: null,\r\n            loadingFridgeId: true,\r\n            fridgeIdError: null\r\n        };\r\n\r\n        this.baseState = { ...this.state };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.handleFetchGoogleUserId();\r\n        await this.fetchHouseholdUnits();\r\n    }\r\n    // Fetches the fridge ID of the currently signed in user\r\n    handleFetchGoogleUserId = async () => {\r\n        try {\r\n            const auth = getAuth();\r\n            const user = auth.currentUser;\r\n            if (user) {\r\n                console.log('Google User ID:', user.uid);\r\n                const response = await FridgeAPI.getAPI().getFridgeIdByGoogleUserId(user.uid);\r\n                this.setState({ fridge_id: response.fridge_id, loadingFridgeId: false });\r\n            } else {\r\n                console.log('No user is signed in.');\r\n                this.setState({ loadingFridgeId: false });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error while fetching fridge ID:', error);\r\n            this.setState({ fridgeIdError: error.message, loadingFridgeId: false });\r\n        }\r\n    };\r\n\r\n    // Fetches the household units of the currently signed in user\r\n    fetchHouseholdUnits = async () => {\r\n        try {\r\n            const auth = getAuth();\r\n            const user = auth.currentUser;\r\n            if (user) {\r\n                const householdResponse = await FridgeAPI.getAPI().getHouseholdIdByGoogleUserId(user.uid);\r\n                const unitsResponse = await FridgeAPI.getAPI().getUnitbyHouseholdId(householdResponse.household_id);\r\n                this.setState({ units: unitsResponse.map(unitBO => unitBO.designation) });\r\n            }\r\n        } catch (e) {\r\n            console.error('Error while fetching units:', e);\r\n            this.setState({ error: { message: e.message } });\r\n        }\r\n    };\r\n\r\n    // Adds a new fridge entry\r\n    addFridgeEntry = async () => {\r\n        const { designation, quantity, unit, fridge_id } = this.state;\r\n\r\n        this.setState({ addingInProgress: true, addingError: null });\r\n\r\n        const newFridgeEntry = new FridgeEntryBO(\r\n            designation,\r\n            quantity,\r\n            unit,\r\n            fridge_id,\r\n        );\r\n\r\n        FridgeAPI.getAPI().addFridgeEntry(newFridgeEntry).then(fridgeentry => {\r\n            this.setState({ ...this.baseState });\r\n            this.props.onClose(fridgeentry);\r\n        }).catch(e => {\r\n            console.error('Error while adding fridge entry:', e);\r\n            this.setState({ addingInProgress: false, addingError: { message: e.message } });\r\n        });\r\n    }\r\n\r\n    // Updates an existing fridge entry\r\n    updateFridgeEntry = () => {\r\n        const { designation, quantity, unit, fridge_id } = this.state;\r\n\r\n        this.setState({ updatingInProgress: true, updatingError: null });\r\n\r\n        const updatedFridgeEntry = {\r\n            id: this.props.fridgeentry.id,\r\n            fridge_id: fridge_id,\r\n            groceries_designation: designation,\r\n            quantity: quantity,\r\n            unit: unit\r\n        };\r\n\r\n        FridgeAPI.getAPI().updateFridgeEntry(updatedFridgeEntry).then(fridgeentry => {\r\n            this.setState({ ...this.baseState });\r\n            this.props.onClose(fridgeentry);\r\n        }).catch(e => {\r\n            console.error('Error while updating fridge entry:', e);\r\n            this.setState({ updatingInProgress: false, updatingError: e.message });\r\n        });\r\n    }\r\n    // Handles the change of a text field\r\n    textFieldValueChange = (event) => {\r\n        const value = event.target.value;\r\n        let error = value.trim().length === 0;\r\n\r\n        this.setState({\r\n            [event.target.id]: value,\r\n            [event.target.id + 'ValidationFailed']: error,\r\n            [event.target.id + 'Edited']: true\r\n        });\r\n    }\r\n    // Handles the closing of the dialog\r\n    handleClose = () => {\r\n        this.setState(this.baseState);\r\n        this.props.onClose(null);\r\n    }\r\n    // Renders the component\r\n    render() {\r\n        const { fridgeentry, show } = this.props;\r\n        const { designation, designationValidationFailed, designationEdited, quantity, quantityValidationFailed, quantityEdited, unit, unitValidationFailed, unitEdited, units, addingInProgress, addingError, updatingInProgress, updatingError, loadingFridgeId, fridgeIdError } = this.state;\r\n\r\n        let title = fridgeentry ? 'Update a Grocery' : 'Create or update one of your Groceries';\r\n        let header = 'Enter Grocery Data';\r\n\r\n        if (loadingFridgeId) {\r\n            return <LoadingProgress show />;\r\n        }\r\n\r\n        if (fridgeIdError) {\r\n            return <ContextErrorMessage error={fridgeIdError} contextErrorMsg={`Error fetching fridge ID`} />;\r\n        }\r\n\r\n        return (\r\n            show ? (\r\n                <Dialog open={show} onClose={this.handleClose} maxWidth='xs'>\r\n                    <DialogTitle id='form-dialog-title'>{title}\r\n                        <IconButton sx={{ position: 'absolute', right: 1, top: 1, color: 'grey[500]' }} onClick={this.handleClose}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>{header}</DialogContentText>\r\n                        <form sx={{ width: '100%' }} noValidate autoComplete='off'>\r\n                            <TextField autoFocus type='text' required fullWidth margin='normal' id='designation' label='Designation:' value={designation}\r\n                                onChange={this.textFieldValueChange} error={designationValidationFailed}\r\n                                helperText={designationValidationFailed ? 'The designation must contain at least one character' : ' '} />\r\n                            <TextField type='text' required fullWidth margin='normal' id='quantity' label='Quantity:' value={quantity}\r\n                                onChange={this.textFieldValueChange} error={quantityValidationFailed}\r\n                                helperText={quantityValidationFailed ? 'The quantity must contain at least one character' : ' '} />\r\n                            <FormControl fullWidth margin=\"normal\">\r\n                                <InputLabel id=\"unit-label\">Unit</InputLabel>\r\n                                <Select\r\n                                    labelId=\"unit-label\"\r\n                                    id=\"unit\"\r\n                                    value={unit}\r\n                                    onChange={(e) => this.setState({ unit: e.target.value, unitEdited: true })}\r\n                                    label=\"Unit\"\r\n                                >\r\n                                    {units.map((unit) => (\r\n                                        <MenuItem key={unit} value={unit}>\r\n                                            {unit}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </form>\r\n                        <LoadingProgress show={addingInProgress || updatingInProgress} />\r\n                        {\r\n                            fridgeentry ?\r\n                                <ContextErrorMessage error={updatingError} contextErrorMsg={`The fridge entry ${fridgeentry.getId()} could not be updated.`} onReload={this.updateFridgeEntry} />\r\n                                :\r\n                                <ContextErrorMessage error={addingError} contextErrorMsg={`The fridge entry could not be added.`} onReload={this.addFridgeEntry} />\r\n                        }\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color='secondary'>Cancel</Button>\r\n                        {\r\n                            fridgeentry ?\r\n                                <Button disabled={designationValidationFailed || quantityValidationFailed || unitValidationFailed} variant='contained' onClick={this.updateFridgeEntry} color='primary'>Update</Button>\r\n                                :\r\n                                <Button disabled={designationValidationFailed || !designationEdited || quantityValidationFailed || !quantityEdited || unitValidationFailed || !unitEdited} variant='contained' onClick={this.addFridgeEntry} color='primary'>Add</Button>\r\n                        }\r\n                    </DialogActions>\r\n                </Dialog>\r\n            ) : null\r\n        );\r\n    }\r\n}\r\n\r\nFridgeEntryForm.propTypes = {\r\n    fridgeentry: PropTypes.object,\r\n    show: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default FridgeEntryForm;\r\n","import React, { Component } from 'react';\r\nimport { Button, Card, CardContent, CardActions, Typography, Grid } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FridgeAPI from '../API/SmartFridgeAPI';\r\nimport FridgeEntryForm from './dialogs/FridgeEntryForm';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport FridgeEntryBO from '../API/FridgeEntryBO';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\n\r\n// FridgeEntriesComponent is a class component managing all fridge entries of the current user.\r\nclass FridgeEntriesComponent extends Component {\r\n\r\n    // Init the state\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fridgeEntries: [],\r\n            showAddForm: false,\r\n            loading: false,\r\n            error: null,\r\n            editEntry: null \r\n        };\r\n    }\r\n    // Fetches all fridge entries of the current user\r\n    componentDidMount() {\r\n        this.fetchFridgeEntries();\r\n    }\r\n\r\n    fetchFridgeEntries = async () => {\r\n        const auth = getAuth();\r\n        const user = auth.currentUser;\r\n        const fridge_id = await FridgeAPI.getAPI().getFridgeIdByGoogleUserId(user.uid);\r\n        this.setState({ loading: true });\r\n        try {\r\n            const entries = await FridgeAPI.getAPI().getFridgeEntriesbyFridgeId(fridge_id.fridge_id);\r\n            const fridgeEntryBOs = FridgeEntryBO.fromJSON(entries);\r\n            this.setState({ fridgeEntries: fridgeEntryBOs, loading: false });\r\n        } catch (error) {\r\n            console.error(\"Failed to fetch fridge entries:\", error);\r\n            this.setState({ error, loading: false });\r\n        }\r\n    };\r\n    // Handles the click on the add button\r\n    handleAddButtonClick = () => {\r\n        this.setState({ showAddForm: true, editEntry: null });\r\n    };\r\n    // Handles the closing of the add/edit form\r\n    handleFormClose = (newEntry) => {\r\n        if (newEntry) {\r\n            this.fetchFridgeEntries();\r\n        }\r\n        this.setState({ showAddForm: false });\r\n    };\r\n    // Handles the click on the edit button\r\n    handleEditButtonClick = (entry) => {\r\n        this.setState({ showAddForm: true, editEntry: entry });\r\n    };\r\n    // Handles the click on the delete button\r\n    handleDeleteButtonClick = async (designation) => {\r\n        try {\r\n            await FridgeAPI.getAPI().deleteFridgeEntry(designation);\r\n            this.fetchFridgeEntries(); \r\n        } catch (error) {\r\n            console.error(\"Failed to delete fridge entry:\", error);\r\n            this.setState({ error: `Failed to delete entry: ${designation}` });\r\n        }\r\n    };\r\n    // Renders the component\r\n    render() {\r\n        const { fridgeEntries, showAddForm, loading, error, editEntry } = this.state;\r\n\r\n        if (loading) {\r\n            return <LoadingProgress show={true} />;\r\n        }\r\n\r\n        if (error) {\r\n            return <ContextErrorMessage error={error} contextErrorMsg=\"Failed to load fridge entries.\" />;\r\n        }\r\n\r\n        return (\r\n            <Grid container spacing={2} style={{ padding: 20 }}>\r\n                <Grid item xs={12} style={{ textAlign:'center'}}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        startIcon={<AddIcon />}\r\n                        onClick={this.handleAddButtonClick}\r\n                    >\r\n                        Add a Grocery\r\n                    </Button>\r\n                </Grid>\r\n                {fridgeEntries.map((entry) => (\r\n                    <Grid item xs={12} sm={6} md={4} key={entry.getId()}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\">{entry.getDesignation()}</Typography>\r\n                                <Typography color=\"textSecondary\">\r\n                                    Quantity: {entry.getQuantity()} {entry.getUnit()}\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button size=\"small\" startIcon={<EditIcon />} onClick={() => this.handleEditButtonClick(entry)}>Edit</Button>\r\n                                <Button size=\"small\" startIcon={<DeleteIcon />} onClick={() => this.handleDeleteButtonClick(entry.getDesignation())}>Delete</Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n                {showAddForm && (\r\n                    <FridgeEntryForm\r\n                        show={showAddForm}\r\n                        fridgeentry={editEntry}\r\n                        onClose={this.handleFormClose}\r\n                    />\r\n                )}\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FridgeEntriesComponent;\r\n","import React, { Component } from 'react';\r\nimport UserList from '../UserList';\r\nimport backgroundImage from './smartfridge.jpg'\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n        <div style={{ textAlign:'center'}}>\r\n        <h1>Willkommen in unsere SmartFridge Anwendung!</h1>;\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Box, Card, CardContent, Typography, CardMedia } from '@mui/material';\r\nimport image from './smartfridge.jpg'\r\n\r\n\r\n//about Komponente @author: Tom Schönfeld\r\nconst About = () => {\r\n    return (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '100vh', bgcolor: '#e0f7fa', padding: 2, }}>\r\n            <Card sx={{ maxWidth: 800, padding: 2, borderRadius: '12px', boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)' }}>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    height=\"200\"\r\n                    image= {image}\r\n                    alt=\"Smart Fridge\"\r\n                />\r\n                <CardContent>\r\n                    <Typography variant=\"h4\" component=\"div\" sx={{ fontWeight: 'bold', marginBottom: 2 }}>\r\n                        About our Application:\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\r\n                        Welcome to our SmartFridge application!\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\r\n                        <strong>Key Features:</strong>\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" color=\"text.secondary\" component=\"ul\" paragraph>\r\n                        <li>Inventory management</li>\r\n                        <li>Cooking Recipes</li>\r\n                        <li>Recipe Management</li>\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\r\n                        We want to minimize food waste and help you to cook delicious meals with the ingredients you have at home.\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\r\n                        Thank you for using our application!\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\nimport { List, ListItem, ListItemText, CircularProgress, Typography, Box, Card, CardContent, Avatar, Divider, TextField, Button, Dialog, DialogActions, DialogContent, DialogTitle, ListItemIcon } from '@mui/material';\r\nimport { getAuth } from 'firebase/auth';\r\nimport FridgeAPI from '../API/SmartFridgeAPI.js';\r\nimport HouseholdBO from '../API/HouseholdBO.js';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n//Momentanen Haushalt laden, der User bekommt dabei die Option, den Haushalt zu wechseln oder den Namen des aktuellen Haushalts anzupassen\r\n\r\nclass Household extends Component {\r\n\r\n    //State initialisieren\r\n    state = {\r\n        users: [],\r\n        householdName: '',\r\n        newHouseholdName: '',\r\n        householdId: null,\r\n        fridgeId: null,\r\n        loading: true,\r\n        error: null,\r\n        households: [],\r\n        selectedHouseholdId: null,\r\n        dialogOpen: false,\r\n    };\r\n\r\n\r\n    //lifecycle Method\r\n    componentDidMount() {\r\n        this.loadHouseholdUsers();\r\n    }\r\n\r\n\r\n    //User des assoziierten Haushaltes laden\r\n    loadHouseholdUsers = async () => {\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        if (!currentUser) {\r\n            this.setState({ error: \"No user logged in\", loading: false });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const userBO = await FridgeAPI.getAPI().getUserbyGoogleUserId(currentUser.uid);\r\n            if (userBO && userBO.length > 0 && userBO[0].household_id) {\r\n                const users = await FridgeAPI.getAPI().getUsersbyHouseholdID(userBO[0].household_id);\r\n                const householdArray = await FridgeAPI.getAPI().getHouseholdbyID(userBO[0].household_id);\r\n                const household = householdArray[0]; // Access the first element of the array\r\n                this.setState({ \r\n                    users: users, \r\n                    householdName: household.name, \r\n                    newHouseholdName: household.name, \r\n                    householdId: userBO[0].household_id, \r\n                    fridgeId: household.fridge_id, \r\n                    loading: false \r\n                });\r\n            } else {\r\n                this.setState({ error: \"User has no associated household.\", loading: false });\r\n            }\r\n        } catch (error) {\r\n            this.setState({ error: error.message, loading: false });\r\n        }\r\n    };\r\n    \r\n    //name des Haushalts updaten\r\n    updateHouseholdName = async () => {\r\n        const { newHouseholdName, householdId, fridgeId } = this.state;\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        if (!currentUser) {\r\n            this.setState({ error: \"No user logged in\", loading: false });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const householdBO = new HouseholdBO(newHouseholdName, fridgeId);\r\n            householdBO.setId(householdId); \r\n            await FridgeAPI.getAPI().updateHousehold(householdBO);\r\n            this.setState({ householdName: newHouseholdName });\r\n        } catch (error) {\r\n            this.setState({ error: error.message, loading: false });\r\n        }\r\n    };\r\n\r\n    handleInputChange = (event) => {\r\n        this.setState({ newHouseholdName: event.target.value });\r\n    };\r\n    //alle Haushalte fetchen\r\n    fetchHouseholds = async () => {\r\n        try {\r\n            const households = await FridgeAPI.getAPI().getHouseholds();\r\n            this.setState({ households: households });\r\n        } catch (error) {\r\n            this.setState({ error: error.message });\r\n        }\r\n    };\r\n    //Selektion eines Haushalts verarbeiten über den API Call updateUser household_id setzen\r\n    handleSelectHousehold = async (id) => {\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        if (!currentUser) {\r\n            this.setState({ error: \"No user logged in\" });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            let userBOArray = await FridgeAPI.getAPI().getUserbyGoogleUserId(currentUser.uid);\r\n            if (userBOArray && userBOArray.length > 0) {\r\n                let userBO = userBOArray[0];\r\n                userBO.household_id = id;\r\n\r\n                await FridgeAPI.getAPI().updateUser(userBO);\r\n                this.setState({ \r\n                    householdId: id, \r\n                    dialogOpen: false \r\n                });\r\n                this.loadHouseholdUsers();\r\n            } else {\r\n                throw new Error(\"User profile not found.\");\r\n            }\r\n        } catch (error) {\r\n            this.setState({ error: error.message });\r\n        }\r\n    };\r\n    //neuen Haushalt erstellen, dabei hat der User die Option, den neuen Namen zu setzen\r\n    addHousehold = async () => {\r\n        const { newHouseholdName } = this.state;\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        if (!currentUser) {\r\n            this.setState({ error: \"No user logged in\" });\r\n            return;\r\n        }\r\n\r\n        if (!newHouseholdName.trim()) {\r\n            this.setState({ error: \"Household name cannot be empty.\" });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            let householdBO = new HouseholdBO({ name: newHouseholdName, id: 0, fridge_id: null });\r\n            const addedHousehold = await FridgeAPI.getAPI().addHousehold(householdBO);\r\n\r\n            let userBOArray = await FridgeAPI.getAPI().getUserbyGoogleUserId(currentUser.uid);\r\n            if (userBOArray && userBOArray.length > 0) {\r\n                let userBO = userBOArray[0];\r\n                userBO.household_id = addedHousehold.id;\r\n                await FridgeAPI.getAPI().updateUser(userBO);\r\n\r\n                this.setState({ \r\n                    householdId: addedHousehold.id, \r\n                    householdName: newHouseholdName, \r\n                    newHouseholdName: '',\r\n                    dialogOpen: false \r\n                });\r\n                this.loadHouseholdUsers();\r\n            } else {\r\n                throw new Error(\"Failed to fetch user data for updating.\");\r\n            }\r\n        } catch (error) {\r\n            this.setState({ error: error.message });\r\n        }\r\n    };\r\n\r\n    deletecurrentHousehold = async () => {\r\n        const { navigate } = this.props;\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        if (!currentUser) {\r\n            this.setState({ error: \"No user logged in\" });\r\n            return;\r\n        }\r\n        try {\r\n            let household_id = await FridgeAPI.getAPI().getHouseholdIdByGoogleUserId(currentUser.uid);\r\n            await FridgeAPI.getAPI().deleteHousehold(household_id.household_id);\r\n            navigate('/home');\r\n            auth.signOut();\r\n        }\r\n        catch (error) {\r\n            this.setState({ error: error.message });\r\n        }\r\n    }\r\n\r\n    renderDialogs = () => {\r\n        const { dialogOpen, households, newHouseholdName, error } = this.state;\r\n\r\n        return (\r\n            <Dialog \r\n                open={dialogOpen} \r\n                onClose={() => this.setState({ dialogOpen: false })}\r\n            >\r\n                <DialogTitle>{households.length ? \"Select or Create a Household\" : \"Create a Household\"}</DialogTitle>\r\n                <DialogContent>\r\n                    {error && <Typography color=\"error\" variant=\"body2\" gutterBottom>{error}</Typography>}\r\n                    <List>\r\n                        {households.map(h => (\r\n                            <ListItem \r\n                                button \r\n                                key={h.id} \r\n                                onClick={() => this.handleSelectHousehold(h.id)}\r\n                                sx={{ \r\n                                    margin: '10px 0', \r\n                                    border: '1px solid #ccc', \r\n                                    borderRadius: '8px', \r\n                                    padding: '10px 20px', \r\n                                    '&:hover': { \r\n                                        backgroundColor: '#f0f0f0' \r\n                                    } \r\n                                }}\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <HomeIcon color=\"red\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={h.name} />\r\n                            </ListItem>\r\n                        ))}\r\n                        <ListItem>\r\n                            <TextField\r\n                                label=\"New Household Name\"\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                                value={newHouseholdName}\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.addHousehold} color=\"primary\">Add New Household</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { users, householdName, newHouseholdName, loading, error, dialogOpen } = this.state;\r\n\r\n        if (loading) return <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '100vh' }}><CircularProgress /></Box>;\r\n        if (error) return <Typography color=\"error\">{error}</Typography>;\r\n\r\n        return (\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '100vh', backgroundColor: 'lightblue', padding: 2 }}>\r\n                <Card raised sx={{ width: '100%', maxWidth: 600, p: 2 }}>\r\n                    <CardContent>\r\n                        <Typography variant=\"h4\" component=\"h2\" gutterBottom align=\"center\">\r\n                            Household: {householdName}\r\n                        </Typography>\r\n                        <Box sx={{ mb: 2 }}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Edit Household Name\"\r\n                                variant=\"outlined\"\r\n                                value={newHouseholdName}\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                            <Button \r\n                                variant=\"contained\" \r\n                                color=\"primary\" \r\n                                onClick={this.updateHouseholdName} \r\n                                sx={{ mt: 1, width: '100%' }}\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                            <Button \r\n                                variant=\"contained\" \r\n                                color=\"primary\" \r\n                                onClick={() => {\r\n                                    this.setState({ dialogOpen: true });\r\n                                    this.fetchHouseholds();\r\n                                }} \r\n                                sx={{ mt: 1, width: '100%' }}\r\n                            >\r\n                                Switch Households or Create a new Household\r\n                            </Button>\r\n                            <Button \r\n                                variant=\"contained\" \r\n                                color=\"primary\" \r\n                                onClick={this.deletecurrentHousehold} \r\n                                sx={{ mt: 1, width: '100%' }}\r\n                            >\r\n                                Delete Current Household\r\n                            </Button>\r\n                        </Box>\r\n                        <Divider sx={{ marginBottom: 2 }} />\r\n                        <Typography variant=\"h5\" component=\"h3\" gutterBottom align=\"center\">\r\n                            Household Members\r\n                        </Typography>\r\n                        <List>\r\n                            {users.map(user => (\r\n                                <ListItem key={user.id} sx={{ borderRadius: 2, mb: 1, bgcolor: 'background.paper', boxShadow: 1 }}>\r\n                                    <Avatar sx={{ mr: 2 }}>\r\n                                        {user.first_name.charAt(0)}\r\n                                    </Avatar>\r\n                                    <ListItemText \r\n                                        primary={`${user.first_name} ${user.last_name}`} \r\n                                        secondary={user.nick_name} \r\n                                        primaryTypographyProps={{ fontWeight: 'bold' }}\r\n                                    />\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </CardContent>\r\n                </Card>\r\n                {dialogOpen && this.renderDialogs()}\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nconst HouseholdWrapper = () => {\r\n    const navigate = useNavigate();\r\n    return <Household navigate={navigate} />;\r\n}\r\n\r\nexport default HouseholdWrapper;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport FridgeAPI from '../../API/SmartFridgeAPI';\r\nimport RecipeBO from '../../API/RecipeBO';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nfunction RecipeForm({ recipeentry, show, onClose }) {\r\n    const [title, setTitle] = useState('');\r\n    const [titleValidationFailed, setTitleValidationFailed] = useState(false);\r\n    const [titleEdited, setTitleEdited] = useState(false);\r\n    const [numberOfPersons, setNumberOfPersons] = useState('');\r\n    const [numberOfPersonsValidationFailed, setNumberOfPersonsValidationFailed] = useState(false);\r\n    const [numberOfPersonsEdited, setNumberOfPersonsEdited] = useState(false);\r\n    const [creator, setCreator] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [descriptionValidationFailed, setDescriptionValidationFailed] = useState(false);\r\n    const [descriptionEdited, setDescriptionEdited] = useState(false);\r\n    const [householdId, setHouseholdId] = useState('');\r\n    const [addingInProgress, setAddingInProgress] = useState(false);\r\n    const [updatingInProgress, setUpdatingInProgress] = useState(false);\r\n    const [addingError, setAddingError] = useState(null);\r\n    const [updatingError, setUpdatingError] = useState(null);\r\n    const [loadingHouseholdId, setLoadingHouseholdId] = useState(true);\r\n    const [householdIdError, setHouseholdIdError] = useState(null);\r\n\r\n    \r\n    useEffect(() => {\r\n        if (recipeentry) {\r\n            setTitle(recipeentry.getTitle());\r\n            setNumberOfPersons(recipeentry.getNumberOfPersons());\r\n            setCreator(recipeentry.getCreator());\r\n            setDescription(recipeentry.getDescription());\r\n            setHouseholdId(recipeentry.getHouseholdId());\r\n        }\r\n        handleFetchGoogleUserId();\r\n    }, [recipeentry]);\r\n\r\n\r\n\r\n    const handleFetchGoogleUserId = async () => {\r\n        try {\r\n            const auth = getAuth();\r\n            const user = auth.currentUser;\r\n            if (user) {\r\n                const response = await FridgeAPI.getAPI().getHouseholdIdByGoogleUserId(user.uid);\r\n                setCreator(user.uid);\r\n                setHouseholdId(response.household_id);\r\n                setLoadingHouseholdId(false);\r\n            } else {\r\n                setLoadingHouseholdId(false);\r\n            }\r\n        } catch (error) {\r\n            setHouseholdIdError(error.message);\r\n            setLoadingHouseholdId(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const addRecipe = async () => {\r\n        setAddingInProgress(true);\r\n        setAddingError(null);\r\n        const newRecipe = new RecipeBO(title, creator, numberOfPersons, description, householdId);\r\n\r\n        try {\r\n            const recipe = await FridgeAPI.getAPI().addRecipe(newRecipe);\r\n            onClose(recipe);\r\n        } catch (e) {\r\n            setAddingError({ message: e.message });\r\n        } finally {\r\n            setAddingInProgress(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const updateRecipe = async () => {\r\n        setUpdatingInProgress(true);\r\n        setUpdatingError(null);\r\n        const updatedRecipe = new RecipeBO(title, creator, numberOfPersons, description, householdId);\r\n        updatedRecipe.setId(recipeentry.getId());\r\n\r\n        try {\r\n            const recipe = await FridgeAPI.getAPI().updateRecipe(updatedRecipe);\r\n            onClose(recipe);\r\n        } catch (e) {\r\n            setUpdatingError({ message: e.message });\r\n        } finally {\r\n            setUpdatingInProgress(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    const textFieldValueChange = (event) => {\r\n        //Sorgt dafür, dass falsche Eingaben vom User erkannt werden\r\n        const { id, value } = event.target;\r\n        const trimmedValue = value.trim();\r\n        const isEdited = trimmedValue.length > 0;\r\n\r\n        switch (id) {\r\n            case 'title':\r\n                setTitle(value);\r\n                setTitleValidationFailed(trimmedValue.length === 0);//False wenn keine Eingabe gemacht wurde\r\n                setTitleEdited(isEdited);\r\n                break;\r\n            case 'numberOfPersons':\r\n                setNumberOfPersons(value);\r\n                setNumberOfPersonsValidationFailed(isNaN(value) || trimmedValue.length === 0); //Falsch, wenn es nicht um keinen numierschen Wert oder kein Eintrag gemacht wurde\r\n                setNumberOfPersonsEdited(isEdited);\r\n                break;\r\n            case 'description':\r\n                setDescription(value);\r\n                setDescriptionValidationFailed(trimmedValue.length === 0); //usw. \r\n                setDescriptionEdited(isEdited);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleClose = () => {\r\n        onClose(null);\r\n    };\r\n\r\n\r\n\r\n    const komponent_title = recipeentry ? 'Update a Recipe' : 'Create a new Recipe';\r\n    const header = recipeentry ? `Recipe ID: ${recipeentry.getId()}` : 'Enter Recipe Data';\r\n\r\n    if (loadingHouseholdId) {\r\n        return <LoadingProgress show />;\r\n    }\r\n\r\n    if (householdIdError) {\r\n        return <ContextErrorMessage error={householdIdError} contextErrorMsg={`Error fetching household ID`} />;\r\n    }\r\n\r\n    return (\r\n        show ? (\r\n            <Dialog open={show} onClose={handleClose} maxWidth='xs'>\r\n                <DialogTitle id='form-dialog-title'>{komponent_title}\r\n                    <IconButton sx={{ position: 'absolute', right: 1, top: 1, color: 'grey[500]' }} onClick={handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>{header}</DialogContentText>\r\n                    <form sx={{ width: '100%' }} noValidate autoComplete='off'>\r\n                        <TextField autoFocus type='text' required fullWidth margin='normal' id='title' label='Title:' value={title}\r\n                            onChange={textFieldValueChange} error={titleValidationFailed}\r\n                            helperText={titleValidationFailed ? 'The title must contain at least one character' : ' '} />\r\n                        <TextField type='number' required fullWidth margin='normal' id='numberOfPersons' label='Number of Persons:' value={numberOfPersons}\r\n                            onChange={textFieldValueChange} error={numberOfPersonsValidationFailed}\r\n                            helperText={numberOfPersonsValidationFailed ? 'The number of persons must be a valid number' : ' '} />\r\n                        <TextField type='text' required fullWidth margin='normal' id='description' label='Description:' value={description}\r\n                            onChange={textFieldValueChange} error={descriptionValidationFailed}\r\n                            helperText={descriptionValidationFailed ? 'The description must contain at least one character' : ' '} />\r\n                    </form>\r\n                    <LoadingProgress show={addingInProgress || updatingInProgress} />\r\n                    {\r\n                        recipeentry ?\r\n                            <ContextErrorMessage error={updatingError} contextErrorMsg={`The recipe ${recipeentry.getId()} could not be updated.`} onReload={updateRecipe} />\r\n                            :\r\n                            <ContextErrorMessage error={addingError} contextErrorMsg={`The recipe could not be added.`} onReload={addRecipe} />\r\n                    }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color='secondary'>Cancel</Button>\r\n                    {\r\n                        recipeentry ?\r\n                            <Button disabled={titleValidationFailed || numberOfPersonsValidationFailed || descriptionValidationFailed} variant='contained' onClick={updateRecipe} color='primary'>Update</Button>\r\n                            :\r\n                            <Button disabled={titleValidationFailed || !titleEdited || numberOfPersonsValidationFailed || !numberOfPersonsEdited || descriptionValidationFailed || !descriptionEdited} variant='contained' onClick={addRecipe} color='primary'>Add</Button>\r\n                    }\r\n                </DialogActions>\r\n            </Dialog>\r\n        ) : null\r\n    );\r\n}\r\n\r\nRecipeForm.propTypes = {\r\n    recipeentry: PropTypes.object,\r\n    show: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default RecipeForm;\r\n","import React from 'react';\r\nimport { Card, CardContent, CardActions, Typography, Button } from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport KitchenIcon from '@mui/icons-material/Kitchen';\r\nimport OutdoorGrillIcon from '@mui/icons-material/OutdoorGrill';\r\n\r\nfunction RecipeCard({ recipe, onEdit, onDelete, onViewEntries, onCook }) {\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Typography variant=\"h5\">{recipe.getTitle()}</Typography>\r\n                <Typography color=\"textSecondary\">\r\n                    Portionen: {recipe.getNumberOfPersons()} <br />\r\n                    Beschreibung: {recipe.getDescription()}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" startIcon={<EditIcon />} onClick={() => onEdit(recipe)}>Rezept bearbeiten</Button>\r\n                <Button size=\"small\" startIcon={<DeleteIcon />} onClick={() => onDelete(recipe)}>Entfernen</Button>\r\n                <Button size=\"small\" startIcon={<KitchenIcon />} onClick={() => onViewEntries(recipe.getId())}>Zeige Zutaten</Button>\r\n                <Button size=\"small\" startIcon={<OutdoorGrillIcon />} onClick={() => onCook(recipe)}>Cook Recipe</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default RecipeCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Grid } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FridgeAPI from '../API/SmartFridgeAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport RecipeBO from '../API/RecipeBO';\r\nimport RecipeForm from './dialogs/RecipeForm';\r\nimport RecipeCard from './layout/RecipeCard';\r\nimport { getAuth } from 'firebase/auth';\r\nimport RecipeEntryBO from '../API/RecipeEntryBO';\r\nimport FridgeEntryBO from '../API/FridgeEntryBO';\r\n\r\nconst conversionRates = {\r\n    liters: { milliliters: 1000, liters: 1 },\r\n    milliliters: { liters: 1 / 1000, milliliters: 1 },\r\n    kilograms: { grams: 1000, kilograms: 1 },\r\n    grams: { kilograms: 1 / 1000, grams: 1 },\r\n    pieces: { pieces: 1 },\r\n    cups: { cups: 1 },\r\n    pinch: { pinch: 1 },\r\n};\r\n\r\nfunction convertQuantity(quantity, fromUnit, toUnit) {\r\n    //Konvertiert verschiedene Maßeinheiten anhand von conversionRates\r\n    if (conversionRates[fromUnit] && conversionRates[fromUnit][toUnit]) {\r\n        return quantity * conversionRates[fromUnit][toUnit];\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction RecipeList() {\r\n    const [recipes, setRecipes] = useState([]);\r\n    const [fridgeEntries, setFridgeEntries] = useState([]);\r\n    const [showAddForm, setShowAddForm] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [editRecipe, setEditRecipe] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        fetchRecipes();\r\n        fetchFridgeEntries();\r\n    }, []);\r\n\r\n    const fetchRecipes = async () => {\r\n        setLoading(true);\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        try {\r\n            const household_id = await FridgeAPI.getAPI().getHouseholdIdByGoogleUserId(currentUser.uid);\r\n            const recipes = await FridgeAPI.getAPI().getRecipesbyhouseholdId(household_id.household_id);\r\n            const recipeBOs = RecipeBO.fromJSON(recipes);\r\n            setRecipes(recipeBOs);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setError(error);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchFridgeEntries = async () => {\r\n        setLoading(true);\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n        try {\r\n            const fridge_id = await FridgeAPI.getAPI().getFridgeIdByGoogleUserId(currentUser.uid);\r\n            const fridgeEntries = await FridgeAPI.getAPI().getFridgeEntriesbyFridgeId(fridge_id.fridge_id);\r\n            const fridgeEntryBOs = FridgeEntryBO.fromJSON(fridgeEntries);\r\n            setFridgeEntries(fridgeEntryBOs);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setError(error);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleAddButtonClick = () => {\r\n        setShowAddForm(true);\r\n        setEditRecipe(null);\r\n    };\r\n\r\n    const handleFormClose = (newRecipe) => {\r\n        if (newRecipe) {\r\n            fetchRecipes();\r\n        }\r\n        setShowAddForm(false);\r\n    };\r\n\r\n    const handleEditButtonClick = (recipe) => {\r\n        setShowAddForm(true);\r\n        setEditRecipe(recipe);\r\n    };\r\n\r\n    const handleDeleteButtonClick = async (recipe) => {\r\n        try {\r\n            await FridgeAPI.getAPI().deleteRecipe(recipe.getId());\r\n            fetchRecipes();\r\n        } catch (error) {\r\n            setError(error);\r\n        }\r\n    };\r\n\r\n    const handleViewEntriesButtonClick = (recipeId) => {\r\n        navigate(`/recipes/entries/${recipeId}`);\r\n    };\r\n\r\n\r\n\r\n    const handleCookButtonClick = async (recipe) => {\r\n        try {\r\n            const missingIngredients = [];\r\n            const recipeEntries = await FridgeAPI.getAPI().getRecipeEntriesByRecipeId(recipe.getId());\r\n            const recipeEntryBOs = RecipeEntryBO.fromJSON(recipeEntries);\r\n\r\n            for (const recipeEntry of recipeEntryBOs) {\r\n                const matchingFridgeEntry = fridgeEntries.find(fridgeEntry =>\r\n                    fridgeEntry.getDesignation() === recipeEntry.getDesignation()\r\n                );\r\n\r\n                if (matchingFridgeEntry) {\r\n                    const recipeQuantityInFridgeUnits = convertQuantity(recipeEntry.getQuantity(), recipeEntry.getUnit(), matchingFridgeEntry.getUnit());\r\n\r\n                    if (recipeQuantityInFridgeUnits === null || matchingFridgeEntry.getQuantity() < recipeQuantityInFridgeUnits) {\r\n                        missingIngredients.push(recipeEntry);\r\n                    }\r\n                } else {\r\n                    missingIngredients.push(recipeEntry);\r\n                }\r\n            }\r\n\r\n            if (missingIngredients.length > 0) {\r\n                console.log('Missing ingredients:', missingIngredients);\r\n                alert('Not enough ingredients in fridge. Please check the console for missing ingredients.');\r\n            } else {\r\n                await FridgeAPI.getAPI().cookRecipe(recipe.getTitle());\r\n                fetchFridgeEntries();\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during cooking process:', error);\r\n            setError(error);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <LoadingProgress show={true} />;\r\n    }\r\n\r\n    if (error) {\r\n        return <ContextErrorMessage error={error} contextErrorMsg=\"Failed to load recipes.\" />;\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2} style={{ padding: 20, justifyContent: \"center\", alignItems: \"center\" }}>\r\n            <Grid item xs={12} style={{ textAlign: 'center' }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<AddIcon />}\r\n                    onClick={handleAddButtonClick}\r\n                >\r\n                    Neues Rezept anlegen\r\n                </Button>\r\n            </Grid>\r\n            {recipes.map((recipe) => (\r\n                <Grid item xs={12} sm={8} md={8} key={recipe.getId()}>\r\n                    <RecipeCard\r\n                        recipe={recipe}\r\n                        onEdit={handleEditButtonClick}\r\n                        onDelete={handleDeleteButtonClick}\r\n                        onViewEntries={handleViewEntriesButtonClick}\r\n                        onCook={handleCookButtonClick}\r\n                    />\r\n                </Grid>\r\n            ))}\r\n            {showAddForm && (\r\n                <RecipeForm\r\n                    show={showAddForm}\r\n                    recipeentry={editRecipe}\r\n                    onClose={handleFormClose}\r\n                />\r\n            )}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default RecipeList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, MenuItem, Select, FormControl, InputLabel } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport FridgeAPI from '../../API/SmartFridgeAPI';\r\nimport RecipeEntryBO from '../../API/RecipeEntryBO';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nfunction RecipeEntryForm({ entry, show, onClose, recipeId }) {\r\n    const [designation, setDesignation] = useState('');\r\n    const [quantity, setQuantity] = useState('');\r\n    const [unit, setUnit] = useState('');\r\n    const [units, setUnits] = useState([]);\r\n    const [addingInProgress, setAddingInProgress] = useState(false);\r\n    const [updatingInProgress, setUpdatingInProgress] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchHouseholdUnits = async () => {\r\n            try {\r\n                const auth = getAuth();\r\n                const user = auth.currentUser;\r\n                if (user) {\r\n                    const householdResponse = await FridgeAPI.getAPI().getHouseholdIdByGoogleUserId(user.uid);\r\n                    const unitsResponse = await FridgeAPI.getAPI().getUnitbyHouseholdId(householdResponse.household_id);\r\n                    setUnits(unitsResponse.map(unitBO => unitBO.designation));\r\n                }\r\n            } catch (e) {\r\n                handleError(e);\r\n            }\r\n        };\r\n\r\n        fetchHouseholdUnits();\r\n\r\n        if (entry) {\r\n            setDesignation(entry.getDesignation());\r\n            setQuantity(entry.getQuantity());\r\n            setUnit(entry.getUnit());\r\n        } else {\r\n            setDesignation('');\r\n            setQuantity('');\r\n            setUnit('');\r\n        }\r\n    }, [entry]);\r\n\r\n    const handleError = (e) => {\r\n        console.error(e);\r\n        setError({ message: e.message });\r\n    };\r\n\r\n    const addRecipeEntry = async () => {\r\n        if (!designation || !quantity || !unit) {\r\n            setError({ message: 'All fields are required' });\r\n            return;\r\n        }\r\n\r\n        setAddingInProgress(true);\r\n        setError(null);\r\n\r\n        const newRecipeEntry = new RecipeEntryBO(designation, quantity, unit, recipeId);\r\n\r\n        try {\r\n            const recipeEntry = await FridgeAPI.getAPI().addRecipeEntry(newRecipeEntry);\r\n            onClose(recipeEntry);\r\n        } catch (e) {\r\n            handleError(e);\r\n        } finally {\r\n            setAddingInProgress(false);\r\n        }\r\n    };\r\n\r\n    const updateRecipeEntry = async () => {\r\n        if (!designation || !quantity || !unit) {\r\n            setError({ message: 'All fields are required' });\r\n            return;\r\n        }\r\n\r\n        setUpdatingInProgress(true);\r\n        setError(null);\r\n\r\n        const updatedRecipeEntry = new RecipeEntryBO(designation, quantity, unit, recipeId);\r\n        updatedRecipeEntry.setId(entry.getId());\r\n        updatedRecipeEntry.setRecipeId(recipeId);\r\n\r\n        try {\r\n            const recipeEntry = await FridgeAPI.getAPI().updateRecipeEntry(updatedRecipeEntry);\r\n            console.log(recipeEntry)\r\n            onClose(recipeEntry);\r\n        } catch (e) {\r\n            handleError(e);\r\n        } finally {\r\n            setUpdatingInProgress(false);\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        onClose(null);\r\n    };\r\n\r\n    return (\r\n        show && (\r\n            <Dialog open={show} onClose={handleClose} maxWidth='xs'>\r\n                <DialogTitle>\r\n                    {entry ? 'Update an Ingredient' : 'Create an Ingredient'}\r\n                    <IconButton onClick={handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {'Enter Ingredient Data'}\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"designation\"\r\n                        label=\"Designation\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        value={designation}\r\n                        onChange={(e) => setDesignation(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"quantity\"\r\n                        label=\"Quantity\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        value={quantity}\r\n                        onChange={(e) => setQuantity(e.target.value)}\r\n                    />\r\n                    <FormControl fullWidth margin=\"dense\">\r\n                        <InputLabel id=\"unit-label\">Unit</InputLabel>\r\n                        <Select\r\n                            labelId=\"unit-label\"\r\n                            id=\"unit\"\r\n                            value={unit}\r\n                            onChange={(e) => setUnit(e.target.value)}\r\n                            label=\"Unit\"\r\n                        >\r\n                            {units.map((unit) => (\r\n                                <MenuItem key={unit} value={unit}>\r\n                                    {unit}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <LoadingProgress show={addingInProgress || updatingInProgress} />\r\n                    <ContextErrorMessage\r\n                        error={error}\r\n                        contextErrorMsg={entry ? `The recipe entry ${entry.getId()} could not be updated.` : 'The recipe entry could not be added.'}\r\n                        onReload={entry ? updateRecipeEntry : addRecipeEntry}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"secondary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={entry ? updateRecipeEntry : addRecipeEntry} color=\"primary\">\r\n                        {entry ? 'Update' : 'Add'}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    );\r\n}\r\n\r\nRecipeEntryForm.propTypes = {\r\n    entry: PropTypes.object,\r\n    show: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    recipeId: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default RecipeEntryForm;\r\n","import React from 'react';\r\nimport { Card, CardContent, CardActions, Typography, Button } from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction RecipeEntryCard({ recipeEntry, onEdit, onDelete, isEntryAvailableInFridge }) {\r\n    if (!recipeEntry) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" style={{ color: isEntryAvailableInFridge(recipeEntry) ? 'black' : 'red' }}>\r\n                    {recipeEntry.getDesignation()}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\" style={{ color: isEntryAvailableInFridge(recipeEntry) ? 'black' : 'red' }}>\r\n                    Quantity: {recipeEntry.getQuantity()} {recipeEntry.getUnit()}\r\n                    {!isEntryAvailableInFridge(recipeEntry) && ' (Not available in fridge)'}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" startIcon={<EditIcon />} onClick={() => onEdit(recipeEntry)}>Edit</Button>\r\n                <Button size=\"small\" startIcon={<DeleteIcon />} onClick={() => onDelete(recipeEntry)}>Delete</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nRecipeEntryCard.propTypes = {\r\n    recipeEntry: PropTypes.object.isRequired,\r\n    onEdit: PropTypes.func.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    isEntryAvailableInFridge: PropTypes.func.isRequired\r\n};\r\n\r\nexport default RecipeEntryCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Grid, Typography, Card, CardContent, CardActions } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { useParams } from 'react-router-dom';\r\nimport FridgeAPI from '../API/SmartFridgeAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport RecipeEntryBO from '../API/RecipeEntryBO';\r\nimport RecipeEntryForm from './dialogs/RecipeEntryForm';\r\nimport RecipeEntryCard from './layout/RecipeEntryCard'\r\nimport FridgeEntryBO from '../API/FridgeEntryBO';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nconst conversionRates = {\r\n    liters: {\r\n        milliliters: 1000,\r\n        liters: 1\r\n    },\r\n    milliliters: {\r\n        liters: 1 / 1000,\r\n        milliliters: 1\r\n    },\r\n    kilograms: {\r\n        grams: 1000,\r\n        kilograms: 1\r\n    },\r\n    grams: {\r\n        kilograms: 1 / 1000,\r\n        grams: 1\r\n    },\r\n    pieces: {\r\n        pieces: 1\r\n    },\r\n    cups: {\r\n        cups: 1\r\n    },\r\n    pinch: {\r\n        pinch: 1\r\n    }\r\n};\r\n\r\nfunction RecipeEntryList() {\r\n    const { recipeId } = useParams();\r\n    const [recipeEntries, setRecipeEntries] = useState([]);\r\n    const [fridgeEntries, setFridgeEntries] = useState([]);\r\n    const [showAddForm, setShowAddForm] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [editEntry, setEditEntry] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchRecipeAndFridgeEntries();\r\n    }, [recipeId]);\r\n\r\n    const fetchRecipeAndFridgeEntries = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const recipeEntries = await FridgeAPI.getAPI().getRecipeEntriesByRecipeId(recipeId);\r\n            const recipeEntryBOs = RecipeEntryBO.fromJSON(recipeEntries);\r\n            setRecipeEntries(recipeEntryBOs);\r\n\r\n            const auth = getAuth();\r\n            const user = auth.currentUser;\r\n            const fridge_id = await FridgeAPI.getAPI().getFridgeIdByGoogleUserId(user.uid);\r\n            const fridgeEntries = await FridgeAPI.getAPI().getFridgeEntriesbyFridgeId(fridge_id.fridge_id);\r\n            const fridgeEntryBOs = FridgeEntryBO.fromJSON(fridgeEntries);\r\n            setFridgeEntries(fridgeEntryBOs);\r\n\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.error('Error fetching entries:', error);\r\n            setError(error);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleAddButtonClick = () => {\r\n        setShowAddForm(true);\r\n        setEditEntry(null);\r\n    };\r\n\r\n    const handleFormClose = (newEntry) => {\r\n        setShowAddForm(false);\r\n        if (newEntry) {\r\n            fetchRecipeAndFridgeEntries();\r\n        }\r\n    };\r\n\r\n    const handleEditButtonClick = (entry) => {\r\n        setShowAddForm(true);\r\n        setEditEntry(entry);\r\n    };\r\n\r\n    const handleDeleteButtonClick = async (entry) => {\r\n        try {\r\n            let designation = entry.getDesignation();\r\n\r\n            // API call and response logging\r\n            const response = await FridgeAPI.getAPI().deleteRecipeEntry(designation, recipeId);\r\n\r\n            fetchRecipeAndFridgeEntries();\r\n        } catch (error) {\r\n            console.error(\"Error during API call: \", error);\r\n            setError(error);\r\n        }\r\n    };\r\n\r\n    const isEntryAvailableInFridge = (entry) => {\r\n        return fridgeEntries.some(fridgeEntry => {\r\n            if (fridgeEntry.getDesignation() === entry.getDesignation()) {\r\n                const convertedQuantity = convertQuantity(entry.getQuantity(), entry.getUnit(), fridgeEntry.getUnit());\r\n                return convertedQuantity !== null && fridgeEntry.getQuantity() >= convertedQuantity;\r\n            }\r\n            return false;\r\n        });\r\n    };\r\n\r\n    function convertQuantity(quantity, fromUnit, toUnit) {\r\n        if (conversionRates[fromUnit] && conversionRates[fromUnit][toUnit]) {\r\n            return quantity * conversionRates[fromUnit][toUnit];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    if (loading) {\r\n        return <LoadingProgress show={true} />;\r\n    }\r\n\r\n    if (error) {\r\n        return <ContextErrorMessage error={error} contextErrorMsg=\"Failed to load ingredients.\" />;\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2} style={{ padding: 20 , textAlign: 'center'}}>\r\n            <Grid item xs={12}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<AddIcon />}\r\n                    onClick={handleAddButtonClick}\r\n                >\r\n                    Add Ingredient\r\n                </Button>\r\n            </Grid>\r\n            {recipeEntries.length === 0 ? (\r\n                <Grid item xs={12}>\r\n                    <p>No ingredients found. Add a new ingredient to get started.</p>\r\n                </Grid>\r\n            ) : (\r\n                recipeEntries.map((entry) => (\r\n                    <Grid item xs={12} sm={6} md={4} key={entry.getId()}>\r\n                        <RecipeEntryCard \r\n                            recipeEntry={entry}\r\n                            fridgeEntries={fridgeEntries}\r\n                            onEdit={handleEditButtonClick}\r\n                            onDelete={handleDeleteButtonClick}\r\n                            isEntryAvailableInFridge={isEntryAvailableInFridge}\r\n                        />\r\n                    </Grid>\r\n                ))\r\n            )}\r\n            {showAddForm && (\r\n                <RecipeEntryForm\r\n                    show={showAddForm}\r\n                    entry={editEntry}\r\n                    onClose={handleFormClose}\r\n                    recipeId={parseInt(recipeId)}\r\n                />\r\n            )}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default RecipeEntryList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport FridgeAPI from '../API/SmartFridgeAPI';\r\nimport UnitBO from '../API/Unit';\r\nimport { getAuth } from 'firebase/auth';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  IconButton,\r\n  Snackbar,\r\n  Alert,\r\n  LinearProgress\r\n} from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\n//Liste der realen Einheiten, die in der SmartFridge App verwendet werden dürfen\r\nconst realUnits = ['liters', 'milliliters', 'kilograms', 'grams', 'pieces', 'cups', 'pinch'];\r\n\r\nconst UnitList = ({ householdId }) => {\r\n  const [units, setUnits] = useState([]);\r\n  const [newUnit, setNewUnit] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUnits();\r\n  }, []);\r\n\r\n  const fetchUnits = async () => {\r\n    setLoading(true);\r\n    const auth = getAuth();\r\n    const currentUser = auth.currentUser;\r\n    const household_id = await FridgeAPI.getAPI().getHouseholdIdByGoogleUserId(currentUser.uid);\r\n    try {\r\n      const fetchedUnits = await FridgeAPI.getAPI().getUnitbyHouseholdId(household_id.household_id);\r\n      setUnits(fetchedUnits || []); //Es muss sichergestellt werden, dass es sich hier um ein Array handelt\r\n    } catch (error) {\r\n      console.error('Failed to fetch units:', error);\r\n      setUnits([]); //Im Fehlerfall \"units\" als leere Liste setzen\r\n    }\r\n    setLoading(false);\r\n  };\r\n// Funktion zum Hinzufügen einer neuen Einheit\r\n  const handleAddUnit = async () => {\r\n    if (!realUnits.includes(newUnit.toLowerCase())) {\r\n      setError('Invalid unit. Please type in a real world Unit.');\r\n      return;\r\n    }\r\n\r\n    const auth = getAuth();\r\n    const currentUser = auth.currentUser;\r\n    try {\r\n      const household_id = await FridgeAPI.getAPI().getHouseholdIdByGoogleUserId(currentUser.uid);\r\n      const unitBO = new UnitBO(newUnit, household_id.household_id);\r\n\r\n      await FridgeAPI.getAPI().addUnit(unitBO);\r\n      fetchUnits();\r\n      setNewUnit('');\r\n      setError('');\r\n      setSnackbarOpen(true);\r\n    } catch (error) {\r\n      console.error('Failed to add unit:', error);\r\n      setError('Failed to add unit');\r\n    }\r\n  };\r\n// Funktion zum Löschen einer Einheit\r\n  const handleDeleteUnit = async (unitId) => {\r\n    try {\r\n      await FridgeAPI.getAPI().deleteUnit(unitId);\r\n      fetchUnits();\r\n    } catch (error) {\r\n      console.error('Failed to delete unit:', error);\r\n    }\r\n  };\r\n\r\n  const handleSnackbarClose = () => {\r\n    setSnackbarOpen(false);\r\n  };\r\n// Darstellung der Einheitenliste\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" gutterBottom style={{ textAlign: 'center', border: '1px solid #ccc', borderRadius: '5px', margin: '20px' }}>\r\n        All available Units\r\n      </Typography>\r\n      {loading ? (\r\n        <LinearProgress />\r\n      ) : units.length === 0 ? ( //Überprüfung, ob die Liste leer ist, um einen Fehler zu vermeiden, sollten keine Einträge in der DB vorhanden sein. \r\n        <Typography variant=\"body1\" style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          No units available.\r\n        </Typography>\r\n      ) : (\r\n        <List>\r\n          {units.map((unit) => (\r\n            <ListItem style={{ border: '1px solid #ccc', borderRadius: '5px', marginBottom: '5px' }}\r\n              key={unit.id}\r\n              secondaryAction={\r\n                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleDeleteUnit(unit.id)}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              }\r\n            >\r\n              <ListItemText primary={unit.designation} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      )}\r\n      <Box mt={4}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Add Unit\r\n        </Typography>\r\n        <TextField\r\n          label=\"New Unit\"\r\n          value={newUnit}\r\n          onChange={(e) => setNewUnit(e.target.value)}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n        />\r\n        <Box mt={2}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleAddUnit}>\r\n            Add\r\n          </Button>\r\n        </Box>\r\n        {error && (\r\n          <Box mt={2}>\r\n            <Alert severity=\"error\">{error}</Alert>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n      <Snackbar\r\n        open={snackbarOpen}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n      >\r\n        <Alert onClose={handleSnackbarClose} severity=\"success\" sx={{ width: '100%' }}>\r\n          Unit added successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UnitList;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate, useLocation } from 'react-router-dom';\r\nimport { Container, ThemeProvider, CssBaseline } from '@mui/material';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth, signInWithRedirect, GoogleAuthProvider, onAuthStateChanged, signInWithPopup, signInWithEmailAndPassword, signInWithPhoneNumber } from 'firebase/auth';\r\nimport Theme from './theme';\r\nimport SignIn from './components/pages/SignIn';\r\nimport firebaseConfig from './firebaseconfig';\r\nimport ContextErrorMessage from './components/dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './components/dialogs/LoadingProgress';\r\nimport Header from './components/layout/Header';\r\nimport Footer from './components/layout/Footer';\r\nimport FridgeAPI from './API/SmartFridgeAPI';\r\nimport CheckforexistingHousehold from './components/dialogs/HouseholdCheck';\r\nimport UserList from './components/UserList';\r\nimport UserBO from './API/UserBO';\r\nimport FridgeEntriesComponent from './components/FridgeItemList';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Home from './components/pages/Home';\r\nimport About from './components/pages/About';\r\nimport Household from './components/HouseholdList';\r\nimport UserProfile from './components/UserList';\r\nimport RecipeList from './components/RecipeList'; \r\nimport RecipeEntryList from './components/RecipeEntryList';\r\nimport UnitList from './components/UnitList';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // Initialisierung des States mit einem leeren User-Objekt und null als Haushalts-ID\r\n        this.state = {\r\n            currentHouseholdId: null,\r\n            currentUser: null,\r\n            appError: null,\r\n            authError: null,\r\n            authLoading: false\r\n        };\r\n\r\n        this.onHouseholdConfirmed = this.onHouseholdConfirmed.bind(this);\r\n\r\n        // Initialisiere Firebase, davor checken ob bereits initialisiert\r\n        if (!App.firebaseInitialized) {\r\n            App.app = initializeApp(firebaseConfig);\r\n            App.auth = getAuth(App.app);\r\n            App.provider = new GoogleAuthProvider();\r\n            App.firebaseInitialized = true;\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return { appError: error };\r\n    }\r\n\r\n    handleSignIn = () => {\r\n        this.setState({ authLoading: true });\r\n        signInWithPopup(App.auth, App.provider);\r\n    };\r\n\r\n    // Lifecycle Methode\r\n    componentDidMount() {\r\n        this.unsubscribeFromAuth = onAuthStateChanged(App.auth, async (user) => {\r\n            if (user) {\r\n                this.setState({ authLoading: true, currentUser: user});\r\n                const userBO = await FridgeAPI.getAPI().getUserbyGoogleUserId(user.uid);\r\n                if (!userBO[0].google_user_id) {\r\n                    let newUser = {\r\n                        id: 0,\r\n                        first_name: user.displayName?.split(\" \")[0] || \"\",\r\n                        last_name: user.displayName?.split(\" \")[1] || \"\",\r\n                        nick_name: user.displayName?.split(\" \")[0] || \"User\",\r\n                        google_user_id: user.uid,\r\n                        household_id: null\r\n                    };\r\n                    await FridgeAPI.getAPI().addUser(newUser);\r\n                } else {\r\n                }\r\n                this.setState({\r\n                    currentUser: user,\r\n                    authError: null,\r\n                    authLoading: false\r\n                });\r\n            } else {\r\n                this.setState({ currentUser: null, authLoading: false });\r\n            }\r\n        });\r\n    }\r\n\r\n    // Funktion, die dafür sorgt, dass componentDidMount nur einmal getriggert wird\r\n    componentWillUnmount() {\r\n        if (this.unsubscribeFromAuth) {\r\n            this.unsubscribeFromAuth();\r\n        }\r\n    }\r\n\r\n    // Haushalt bestätigt\r\n    onHouseholdConfirmed = async (householdId) => {\r\n        const auth = getAuth();\r\n        const currentUser = auth.currentUser;\r\n\r\n        if (!currentUser) {\r\n            this.setState({ error: \"No authenticated user found.\" });\r\n            return;\r\n        }\r\n\r\n        this.setState({ loading: true });\r\n\r\n        try {\r\n            let userBOArray = await FridgeAPI.getAPI().getUserbyGoogleUserId(currentUser.uid);\r\n            if (userBOArray && userBOArray.length > 0) {\r\n                let userBO = userBOArray[0];\r\n                userBO.household_id = householdId;  // householdid updaten\r\n\r\n                await FridgeAPI.getAPI().updateUser(userBO);  // user per api updaten\r\n                this.setState({ loading: false, dialogOpen: false, selectedHouseholdId: householdId });\r\n            } else {\r\n                throw new Error(\"User profile not found.\");\r\n            }\r\n        } catch (error) {\r\n            this.setState({ error: error.message, loading: false });\r\n            console.error(\"Failed to update user's household:\", error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { currentUser, appError, authError, authLoading } = this.state;\r\n        return (\r\n            <ThemeProvider theme={Theme}>\r\n                <CssBaseline />\r\n                <Router>\r\n                    <Container maxWidth='md' style={{ display: 'flex', flexDirection: 'column' }}>\r\n                        <Header user={currentUser} />\r\n                        <div style={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\r\n                            <Routes>\r\n                                <Route path=\"/\" element={currentUser ? <Navigate replace to=\"/home\" /> : <SignIn onSignIn={this.handleSignIn} />} />\r\n                                <Route path=\"/home\" element={<Secured user={currentUser}>\r\n                                    <CheckforexistingHousehold onHouseholdConfirmed={this.onHouseholdConfirmed} />\r\n                                    <Home />\r\n                                </Secured>} />\r\n                                \r\n                                <Route path=\"/user\" element={\r\n                                    <Secured user={currentUser}>\r\n                                        <UserProfile />\r\n                                    </Secured>\r\n                                } />\r\n                                \r\n                                <Route path=\"/fridge\" element={\r\n                                    <Secured user={currentUser}>\r\n                                        <FridgeEntriesComponent />\r\n                                    </Secured>\r\n                                } />\r\n                               \r\n                                <Route path=\"/household\" element={\r\n                                    <Secured user={currentUser}>\r\n                                        <Household/>\r\n                                    </Secured>\r\n                                }/>\r\n\r\n                                <Route path= \"/recipe\" element={\r\n                                    <Secured user={currentUser}>\r\n                                        <RecipeList/>\r\n                                    </Secured>\r\n\r\n                                }/>\r\n\r\n                                <Route path=\"/recipes/entries/:recipeId\" element={\r\n                                    <Secured user={currentUser}>\r\n                                        <RecipeEntryList/>\r\n                                        </Secured>} \r\n                                        />\r\n                                        \r\n                                <Route path = \"/unit\" element={\r\n                                    <Secured user={currentUser}>\r\n                                        <UnitList/>\r\n                                    </Secured>\r\n                                }/>\r\n                          \r\n                                \r\n                                <Route path=\"/about\" element={<Secured user={currentUser}>\r\n                                        <About/>\r\n                                    </Secured>\r\n                                }/>\r\n                            </Routes>\r\n                            <LoadingProgress show={authLoading} />\r\n                            <ContextErrorMessage error={authError} contextErrorMsg={`Something went wrong during sign in process.`} onReload={this.handleSignIn} />\r\n                            <ContextErrorMessage error={appError} contextErrorMsg={`Something went wrong inside the app. Please reload the page.`} />\r\n                        </div>\r\n                    </Container>\r\n                </Router>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\nfunction Secured({ user, children }) {\r\n    let location = useLocation();\r\n    if (!user) {\r\n        return <Navigate to=\"/\" state={{ from: location }} replace />;\r\n    }\r\n    return children;\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}